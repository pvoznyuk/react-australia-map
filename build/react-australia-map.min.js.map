{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-australia-map.min.js","webpack:///webpack/bootstrap 15c8629bacebf40083cf","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/data/australia-map-dimensions.js","webpack:///./src/data/australia-states-dimensions.json","webpack:///./src/components/State.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_australiaMapDimensions","_australiaMapDimensions2","_State","_State2","AustraliaMap","_React$Component","getPrototypeOf","apply","stateAbbreviation","onClick","state","style","customize","dataState","label","styles","fill","customStyle","stroke","strokeWidth","customLabelStyle","fontSize","textAnchor","fontFamily","clickHandler","bind","paths","stateKey","path","createElement","dimensions","styleProps","showLabels","labelPosition","name","onClickState","stateClickHandler","push","_this2","labels","_loop","labelText","x","y","styleLabelProps","userSelect","cursor","split","map","item","index","dy","Math","min","className","height","viewBox","width","xmlns","title","buildPaths","buildLabels","Component","propTypes","string","func","isRequired","oneOfType","number","bool","object","defaultProps","emptyFunction","invariant","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","array","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","format","a","b","d","e","f","validateFormat","error","undefined","Error","args","argIndex","replace","framesToPop","_australiaStatesDimensions","_australiaStatesDimensions2","NSW","abbreviation","NT","QLD","WA","VIC","SA","TAS","ACT","State","data-name"],"mappings":"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","file":"react-australia-map.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactAustraliaMap\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactAustraliaMap\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactAustraliaMap\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactAustraliaMap\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _australiaMapDimensions = __webpack_require__(7);\n\t\n\tvar _australiaMapDimensions2 = _interopRequireDefault(_australiaMapDimensions);\n\t\n\tvar _State = __webpack_require__(9);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar AustraliaMap = function (_React$Component) {\n\t  _inherits(AustraliaMap, _React$Component);\n\t\n\t  function AustraliaMap() {\n\t    _classCallCheck(this, AustraliaMap);\n\t\n\t    return _possibleConstructorReturn(this, (AustraliaMap.__proto__ || Object.getPrototypeOf(AustraliaMap)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(AustraliaMap, [{\n\t    key: 'clickHandler',\n\t    value: function clickHandler(stateAbbreviation) {\n\t      this.props.onClick(stateAbbreviation);\n\t    }\n\t  }, {\n\t    key: 'customStyle',\n\t    value: function customStyle(state, style) {\n\t      if (this.props.customize && this.props.customize[state] && this.props.customize[state][style]) {\n\t        return this.props.customize[state][style];\n\t      }\n\t\n\t      return this.props[style];\n\t    }\n\t  }, {\n\t    key: 'customLabelStyle',\n\t    value: function customLabelStyle(state, style) {\n\t      var dataState = _australiaMapDimensions2.default[state].label;\n\t\n\t      if (this.props.customize && this.props.customize[state] && this.props.customize[state].label && this.props.customize[state].label[style]) {\n\t        return this.props.customize[state].label[style];\n\t      }\n\t\n\t      return dataState[style] || this.props.label[style] || null;\n\t    }\n\t  }, {\n\t    key: 'styleProps',\n\t    value: function styleProps(state) {\n\t      var styles = {\n\t        fill: this.customStyle(state, 'fill'),\n\t        stroke: this.customStyle(state, 'stroke'),\n\t        strokeWidth: this.customStyle(state, 'strokeWidth')\n\t      };\n\t\n\t      if (styles.strokeWidth === 0) {\n\t        styles.stroke = styles.fill;\n\t        styles.strokeWidth = 1;\n\t      }\n\t\n\t      return styles;\n\t    }\n\t  }, {\n\t    key: 'styleLabelProps',\n\t    value: function styleLabelProps(state) {\n\t      return {\n\t        fill: this.customLabelStyle(state, 'fill'),\n\t        stroke: this.customLabelStyle(state, 'stroke'),\n\t        strokeWidth: this.customLabelStyle(state, 'strokeWidth'),\n\t        fontSize: this.customLabelStyle(state, 'fontSize'),\n\t        textAnchor: this.customLabelStyle(state, 'textAnchor'),\n\t        fontFamily: this.customLabelStyle(state, 'fontFamily')\n\t      };\n\t    }\n\t  }, {\n\t    key: 'stateClickHandler',\n\t    value: function stateClickHandler(state) {\n\t      if (this.props.customize && this.props.customize[state] && this.props.customize[state].clickHandler) {\n\t        return this.props.customize[state].clickHandler;\n\t      }\n\t      return this.clickHandler.bind(this);\n\t    }\n\t  }, {\n\t    key: 'buildPaths',\n\t    value: function buildPaths() {\n\t      var paths = [];\n\t\n\t      for (var stateKey in _australiaMapDimensions2.default) {\n\t        var path = _react2.default.createElement(_State2.default, _extends({\n\t          dimensions: _australiaMapDimensions2.default[stateKey].dimensions\n\t        }, this.styleProps(stateKey), {\n\t\n\t          showLabels: this.customStyle(stateKey, 'showLabels'),\n\t          labelPosition: _australiaMapDimensions2.default[stateKey].labelPosition,\n\t          label: _australiaMapDimensions2.default[stateKey].name,\n\t\n\t          key: stateKey,\n\t          onClickState: this.stateClickHandler(stateKey),\n\t          state: stateKey }));\n\t\n\t        paths.push(path);\n\t      }\n\t      return paths;\n\t    }\n\t  }, {\n\t    key: 'buildLabels',\n\t    value: function buildLabels() {\n\t      var _this2 = this;\n\t\n\t      var labels = [];\n\t\n\t      var _loop = function _loop(stateKey) {\n\t        var showLabels = _this2.customStyle(stateKey, 'showLabels');\n\t\n\t        if (showLabels) {\n\t          var labelText = _this2.customLabelStyle(stateKey, 'name');\n\t\n\t          var label = _react2.default.createElement(\n\t            'text',\n\t            _extends({\n\t              key: stateKey,\n\t              state: stateKey,\n\t              x: _this2.customLabelStyle(stateKey, 'x'),\n\t              y: _this2.customLabelStyle(stateKey, 'y')\n\t            }, _this2.styleLabelProps(stateKey), {\n\t              onClickState: _this2.stateClickHandler(stateKey),\n\t              style: { userSelect: 'none', cursor: 'default' }\n\t            }),\n\t            _react2.default.createElement(\n\t              'tspan',\n\t              null,\n\t              labelText.split(\"\\n\").map(function (item, index) {\n\t                return _react2.default.createElement(\n\t                  'tspan',\n\t                  {\n\t                    key: item,\n\t                    x: _this2.customLabelStyle(stateKey, 'x'),\n\t                    dy: Math.min(index, 1) + 'em' },\n\t                  item\n\t                );\n\t              })\n\t            )\n\t          );\n\t\n\t          labels.push(label);\n\t        }\n\t      };\n\t\n\t      for (var stateKey in _australiaMapDimensions2.default) {\n\t        _loop(stateKey);\n\t      }\n\t      return labels;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'svg',\n\t        {\n\t          className: 'au-state-map',\n\t          height: this.props.height,\n\t          id: this.props.id || null,\n\t          viewBox: '0 0 290 262',\n\t          width: this.props.width,\n\t          xmlns: 'http://www.w3.org/2000/svg' },\n\t        _react2.default.createElement(\n\t          'title',\n\t          null,\n\t          this.props.title\n\t        ),\n\t        _react2.default.createElement(\n\t          'g',\n\t          { className: 'outlines' },\n\t          this.buildPaths(),\n\t          this.buildLabels()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return AustraliaMap;\n\t}(_react2.default.Component);\n\t\n\tAustraliaMap.propTypes = {\n\t  id: _propTypes2.default.string,\n\t  onClick: _propTypes2.default.func.isRequired,\n\t  width: _propTypes2.default.oneOfType[(_propTypes2.default.number, _propTypes2.default.string)],\n\t  height: _propTypes2.default.oneOfType[(_propTypes2.default.number, _propTypes2.default.string)],\n\t  title: _propTypes2.default.string,\n\t  fill: _propTypes2.default.string,\n\t  stroke: _propTypes2.default.string,\n\t  strokeWidth: _propTypes2.default.number,\n\t  showLabels: _propTypes2.default.bool,\n\t  label: _propTypes2.default.object,\n\t  customize: _propTypes2.default.object\n\t};\n\t\n\tAustraliaMap.defaultProps = {\n\t  onClick: function onClick() {},\n\t  width: '100%',\n\t  height: 'auto',\n\t  fill: '#D3D3D3',\n\t  stroke: '#D3D3D3',\n\t  strokeWidth: 1,\n\t  title: 'Australia map',\n\t  showLabels: false,\n\t  label: {\n\t    textAnchor: 'middle',\n\t    fill: 'white',\n\t    fontSize: 11,\n\t    fontFamily: 'Verdana'\n\t  },\n\t  customize: {}\n\t};\n\t\n\texports.default = AustraliaMap;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(3)();\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(4);\n\tvar invariant = __webpack_require__(5);\n\tvar ReactPropTypesSecret = __webpack_require__(6);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _australiaStatesDimensions = __webpack_require__(8);\n\t\n\tvar _australiaStatesDimensions2 = _interopRequireDefault(_australiaStatesDimensions);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _australiaStatesDimensions2.default;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"NSW\": {\n\t\t\t\"dimensions\": \"M 271.2875,129.6 L 270.4125,130.225 L 269.75625,130.85 L 268.6625,130.94375 L 267.75625,131.0375 L 267.6625,131.7875 L 267.94375,132.85 L 268.6625,132.7875 L 268.00625,133.56875 L 267.88125,134.13125 L 266.85,134.6 L 266.06875,134.31875 L 265.6625,133.63125 L 265.00625,134.4125 L 264.35,135.225 L 264.0375,135.7875 L 263.35,136.225 L 262.88125,135.1625 L 262.81875,134.44375 L 262.38125,133.75625 L 261.975,133.25625 L 261.31875,132.4125 L 260.19375,132.1625 L 258.56875,132.13125 L 257.975,131.81875 L 257.225,131.5375 L 256.50625,131.6 L 256.2875,131.06875 L 255.38125,131.1625 L 253.94375,131.6625 L 252.6625,131.44375 L 251.35,131.0375 L 250.7875,131.06875 L 250.00625,132.25625 L 248.9125,132.1625 L 248.81875,133.2875 L 248.1,133.35 L 248.1625,133.88125 L 247.2875,134.35 L 194.1625,134.2875 L 194.1625,179.35 L 194.1625,179.38125 L 194.225,179.6 L 195.35,179.4125 L 197.19375,180.2875 L 198.225,179.56875 L 199.975,179.85 L 202.1,180.1 L 203.81875,181.5375 L 204.31875,183.56875 L 205.4125,184.5375 L 205.44375,183.56875 L 206.50625,183.0375 L 207.475,183.25625 L 209.19375,183.38125 L 210.19375,183.7875 L 210.81875,186.5375 L 212.25625,188.6 L 213.38125,188.63125 L 215.00625,189.31875 L 216.975,191.1 L 217.35,192.38125 L 218.63125,193.31875 L 220.25625,194.00625 L 221.56875,193.81875 L 221.31875,192.35 L 221.81875,191.69375 L 222.5375,191.6 L 223.38125,192.0375 L 225.225,191.75625 L 226.6625,192.475 L 227.56875,192.35 L 228.7875,192.9125 L 229.975,193.13125 L 230.63125,192.44375 L 231.50625,192.13125 L 232.56875,192.725 L 234.50625,193.19375 L 235.975,192.7875 L 237.0375,192.44375 L 237.7875,192.31875 L 238.50625,192.0375 L 239.4125,191.69375 L 240.81875,192.44375 L 240.63125,193.6 L 241.19375,194.81875 L 241.9125,195.85 L 242.25625,196.94375 L 242.1,198.2875 L 250.2875,202.35 L 252.00625,202.475 L 252.725,203.13125 L 253.38125,203.13125 L 253.225,203.56875 L 253.35,203.6625 L 254.44375,203.13125 L 254.225,201.4125 L 254.6625,201.19375 L 255.1,201.19375 L 254.6625,200.13125 L 253.81875,199.9125 L 254.225,199.06875 L 253.81875,198.00625 L 254.225,198.225 L 254.6625,196.725 L 255.50625,193.31875 L 255.2875,191.19375 L 255.725,189.9125 L 255.2875,189.9125 L 256.35,189.06875 L 255.725,188.225 L 256.56875,188.4125 L 258.2875,184.38125 L 259.75625,183.94375 L 259.13125,182.6625 L 259.75625,182.475 L 259.75625,183.31875 L 260.19375,183.1 L 259.75625,181.81875 L 259.35,182.0375 L 259.56875,181.6 L 258.69375,181.4125 L 260.19375,180.75625 L 260.63125,179.25625 L 260.19375,178.63125 L 260.85,178.4125 L 260.85,176.9125 L 262.5375,175.225 L 261.9125,175.00625 L 262.975,174.7875 L 261.69375,174.38125 L 263.1625,174.1625 L 263.38125,173.1 L 262.75625,173.50625 L 262.31875,173.1 L 262.975,173.31875 L 262.75625,172.6625 L 263.38125,173.1 L 263.6,171.38125 L 263.6,171.1625 L 263.1625,171.6 L 263.1625,170.975 L 262.975,171.1625 L 262.75625,170.5375 L 263.38125,170.975 L 263.6,169.9125 L 263.6,170.75625 L 264.44375,170.31875 L 264.6625,169.25625 L 264.25625,168.85 L 265.1,168.85 L 265.725,167.13125 L 265.1,167.975 L 264.88125,167.13125 L 265.50625,167.13125 L 265.50625,166.2875 L 265.725,167.13125 L 266.6,165.63125 L 266.38125,165.225 L 266.7875,165.225 L 266.7875,165.85 L 269.35,164.35 L 268.50625,164.1625 L 267.6625,164.7875 L 267.44375,164.56875 L 267.85,164.1625 L 267.6625,163.725 L 268.50625,164.1625 L 269.13125,163.725 L 269.35,164.1625 L 270.19375,162.88125 L 271.69375,162.00625 L 271.9125,160.31875 L 271.25625,160.1 L 271.25625,160.5375 L 270.4125,160.1 L 271.25625,160.1 L 271.475,160.1 L 271.69375,158.6 L 273.19375,157.35 L 275.1,151.1625 L 274.88125,146.9125 L 276.38125,143.06875 L 276.6,142.4125 L 277.225,138.81875 L 276.6,138.38125 L 277.225,138.6 L 277.0375,137.75625 L 278.725,134.5375 L 278.2875,134.5375 L 278.725,134.35 L 278.94375,132.63125 L 278.2875,131.7875 L 278.475,129.88125 L 277.50625,129.9125 L 276.6,129.81875 L 276.06875,130.225 L 275.56875,130.44375 L 275.00625,130.50625 L 274.06875,130.225 L 273.0375,130.69375 L 272.225,129.88125 L 271.2875,129.6 z M 245.94375,185.85 C 246.4011,185.83171 246.88755,185.9021 247.31875,186.1 C 247.68859,186.26974 247.81087,186.51964 247.7875,186.7875 C 247.76413,187.05536 247.56333,187.33774 247.35,187.6625 C 246.92333,188.312 246.34845,189.03293 246.38125,189.6625 C 246.30457,190.00785 245.94393,190.75511 245.44375,190.85 C 245.19366,190.89744 244.89487,190.78185 244.6,190.38125 C 244.30512,189.98065 243.99269,189.29934 243.69375,188.19375 C 243.51125,187.5188 243.72572,186.9458 244.1625,186.5375 C 244.59927,186.1292 245.25772,185.87745 245.94375,185.85 z\",\n\t\t\t\"abbreviation\": \"NSW\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"New South\\nWales\",\n\t\t\t\t\"x\": 230,\n\t\t\t\t\"y\": 160\n\t\t\t}\n\t\t},\n\t\t\"NT\": {\n\t\t\t\"dimensions\": \"M 125.184,12.525 L 127.313,13.803 L 129.443,12.525 L 130.082,11.461 L 130.722,11.673 L 130.722,10.821 L 131.36,10.609 L 130.509,9.331 L 129.656,9.331 L 129.444,8.692 L 128.805,9.544 L 129.231,10.609 L 128.593,9.118 L 128.38,9.757 L 127.954,9.545 L 127.954,10.822 L 127.741,9.757 L 127.528,9.757 L 126.889,9.545 L 125.611,9.971 L 126.463,11.249 L 125.611,10.823 L 125.398,9.758 L 124.972,10.184 L 125.185,10.397 L 124.972,10.397 L 124.972,10.184 L 124.972,9.332 L 123.481,8.48 L 124.006,11.277 L 123.269,11.462 L 123.694,11.036 L 123.269,11.249 L 123.694,10.397 L 123.269,9.545 L 121.778,10.61 L 122.63,11.036 L 122.204,11.036 L 122.204,11.888 L 122.416,12.03 L 122.416,12.527 L 122.204,11.888 L 121.991,12.314 L 121.352,11.888 L 121.352,12.74 L 120.926,12.74 L 124.972,13.166 L 125.184,12.525 z M 113.85,33.81875 L 113.85,117.35 L 173.4125,117.35 L 173.4125,44.19375 L 172.6625,43.19375 L 170.5375,42.5375 L 167.75625,40.63125 L 167.13125,40.85 L 167.35,41.2875 L 166.2875,40.85 L 165.63125,41.06875 L 165.63125,40.19375 L 163.2875,39.13125 L 162.44375,37.44375 L 159.0375,35.31875 L 158.81875,35.5375 L 158.81875,35.1 L 158.19375,35.31875 L 157.13125,34.25625 L 156.69375,32.75625 L 157.975,32.31875 L 159.0375,29.7875 L 160.31875,29.13125 L 160.5375,27.85 L 161.6,25.50625 L 160.725,26.1625 L 160.31875,25.94375 L 160.1,24.0375 L 160.5375,24.225 L 160.94375,23.81875 L 160.31875,23.6 L 160.5375,22.975 L 161.1625,22.5375 L 161.38125,23.1625 L 162.00625,21.9125 L 162.225,22.975 L 162.44375,21.9125 L 163.06875,22.1 L 163.2875,21.475 L 163.725,22.5375 L 163.2875,23.1625 L 164.13125,22.75625 L 164.7875,21.475 L 164.13125,20.81875 L 165.4125,21.0375 L 164.13125,19.56875 L 164.56875,19.75625 L 164.7875,19.35 L 165.225,19.975 L 165.00625,19.13125 L 165.63125,19.13125 L 166.06875,18.06875 L 165.85,17.4125 L 166.2875,17.4125 L 166.2875,18.06875 L 167.56875,16.56875 L 166.2875,15.2875 L 165.63125,15.725 L 166.06875,16.13125 L 165.4125,16.13125 L 164.56875,14.225 L 164.13125,14.225 L 164.7875,13.38125 L 162.225,15.2875 L 163.725,15.725 L 163.06875,17.00625 L 162.44375,17.4125 L 161.6,17.225 L 161.1625,17.63125 L 161.1625,17.00625 L 160.725,17.00625 L 161.38125,15.94375 L 160.725,16.13125 L 160.5375,15.725 L 161.38125,14.6625 L 159.6625,15.50625 L 159.44375,16.1625 L 158.81875,15.725 L 160.5375,13.81875 L 158.19375,15.06875 L 157.975,14.6625 L 156.9125,14.88125 L 155.85,15.50625 L 156.69375,15.94375 L 155.4125,15.725 L 155.85,16.35 L 153.2875,15.2875 L 152.63125,13.81875 L 151.7875,14.88125 L 149.225,14.225 L 148.6,15.50625 L 149.0375,14.44375 L 148.6,13.6 L 148.1625,13.81875 L 147.94375,13.1625 L 147.1,13.81875 L 146.475,13.1625 L 147.1,12.5375 L 146.25625,12.31875 L 144.35,13.38125 L 144.5375,12.5375 L 144.13125,12.94375 L 143.69375,12.31875 L 143.06875,12.725 L 143.25625,12.1 L 142.00625,12.31875 L 140.50625,9.75625 L 140.06875,9.75625 L 140.2875,10.4125 L 139.85,10.19375 L 138.7875,11.0375 L 137.31875,8.9125 L 136.88125,9.5375 L 136.6625,8.25625 L 136.0375,8.69375 L 136.25625,9.31875 L 135.1625,8.25625 L 135.38125,9.5375 L 135.81875,9.75625 L 135.38125,10.4125 L 134.975,8.9125 L 134.1,8.25625 L 134.1,9.13125 L 133.0375,8.9125 L 133.25625,9.31875 L 132.85,9.75625 L 133.9125,9.5375 L 134.1,9.975 L 133.9125,10.19375 L 134.75625,10.4125 L 134.975,11.0375 L 135.81875,10.6 L 137.725,10.4125 L 137.725,10.81875 L 138.1625,10.81875 L 137.725,11.0375 L 138.38125,11.25625 L 137.94375,11.25625 L 138.38125,11.475 L 137.94375,11.6625 L 139.00625,11.6625 L 139.225,11.6625 L 138.1625,12.725 L 139.00625,13.38125 L 138.6,13.6 L 138.38125,14.88125 L 139.44375,15.2875 L 137.975,14.88125 L 137.31875,15.2875 L 137.1,16.56875 L 136.69375,15.50625 L 136.0375,15.94375 L 135.81875,15.2875 L 134.75625,16.35 L 133.69375,15.725 L 130.725,16.13125 L 129.88125,15.50625 L 129.6625,14.44375 L 129.225,15.725 L 127.5375,15.2875 L 127.94375,16.7875 L 126.88125,16.56875 L 126.475,17.00625 L 127.5375,17.85 L 126.6625,17.63125 L 127.06875,18.2875 L 126.6625,18.69375 L 126.25625,17.85 L 126.25625,18.06875 L 125.81875,18.2875 L 126.0375,17.19375 L 124.75625,17.00625 L 124.975,18.475 L 124.5375,18.475 L 125.81875,19.13125 L 125.19375,19.13125 L 125.19375,19.5375 L 124.13125,18.475 L 123.475,18.69375 L 123.69375,19.13125 L 123.25625,18.69375 L 123.25625,20.19375 L 121.7875,20.6 L 121.7875,22.1 L 123.0375,23.6 L 122.63125,23.38125 L 120.9125,24.6625 L 120.2875,24.44375 L 120.2875,24.0375 L 119.63125,24.44375 L 119.44375,26.35 L 119.85,26.1625 L 119.00625,26.7875 L 119.225,27.85 L 118.56875,28.2875 L 118.1625,27.85 L 118.56875,28.9125 L 118.1625,28.50625 L 117.725,29.35 L 117.50625,28.69375 L 116.6625,30.19375 L 116.6625,30.85 L 117.2875,31.475 L 117.725,31.0375 L 117.725,31.69375 L 118.56875,31.475 L 118.7875,31.9125 L 119.63125,31.475 L 119.44375,31.9125 L 118.38125,32.5375 L 119.00625,32.5375 L 119.00625,32.975 L 118.7875,32.975 L 118.94375,33.25625 L 119.1,33.31875 L 119.63125,32.975 L 119.44375,33.6 L 120.9125,32.75625 L 120.9125,33.38125 L 120.06875,33.38125 L 120.50625,33.81875 L 119.85,33.6 L 119.44375,33.6 L 118.56875,33.6 L 119.00625,34.44375 L 118.56875,34.0375 L 118.7875,35.5375 L 118.1625,35.725 L 117.50625,34.25625 L 116.88125,34.0375 L 117.1,35.1 L 116.225,33.81875 L 116.44375,34.25625 L 116.0375,34.25625 L 115.81875,34.25625 L 116.225,34.88125 L 115.81875,35.31875 L 116.44375,35.5375 L 115.81875,35.5375 L 115.6,36.38125 L 115.6,35.725 L 115.1625,36.6 L 115.6,35.5375 L 115.38125,35.31875 L 114.94375,34.88125 L 114.94375,34.0375 L 114.5375,34.6625 L 114.5375,33.81875 L 113.85,33.81875 z M 163.943,29.137 L 165.433,29.989 L 167.35,29.989 L 167.137,28.924 L 166.923,29.35 L 165.86,29.137 L 165.86,28.286 L 166.498,28.072 L 166.285,27.434 L 167.35,26.582 L 166.71,26.155 L 166.71,26.794 L 165.86,26.794 L 165.646,25.942 L 165.86,25.517 L 164.793,25.729 L 165.22,26.369 L 163.73,26.794 L 163.73,27.859 L 163.943,28.711 L 163.303,29.563 L 163.943,29.137 z\",\n\t\t\t\"abbreviation\": \"NT\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"Northern\\nTerritory\",\n\t\t\t\t\"x\": 144,\n\t\t\t\t\"y\": 70\n\t\t\t}\n\t\t},\n\t\t\"QLD\": {\n\t\t\t\"dimensions\": \"M 204.81875,5.2875 L 203.975,5.50625 L 203.31875,6.7875 L 202.06875,7.19375 L 202.25625,8.25625 L 201.63125,11.0375 L 201.4125,11.0375 L 201.19375,12.5375 L 201.85,12.5375 L 201.00625,12.725 L 200.7875,14.00625 L 201.19375,14.6625 L 201.63125,14.225 L 201.19375,14.88125 L 200.7875,14.6625 L 200.56875,15.50625 L 200.35,14.00625 L 199.2875,15.725 L 199.9125,15.94375 L 199.2875,15.94375 L 198.44375,18.06875 L 199.06875,18.06875 L 198.85,17.225 L 199.50625,17.4125 L 199.06875,17.63125 L 199.9125,18.2875 L 201.00625,18.2875 L 199.9125,18.69375 L 201.00625,19.13125 L 200.56875,19.35 L 200.7875,20.4125 L 199.9125,18.9125 L 199.50625,19.975 L 198.44375,20.81875 L 199.06875,22.75625 L 198.85,23.38125 L 199.2875,23.1625 L 199.06875,23.38125 L 199.50625,23.6 L 198.6625,23.6 L 197.56875,26.7875 L 198.6625,29.13125 L 198.00625,31.25625 L 198.85,35.1 L 197.56875,38.50625 L 196.94375,41.06875 L 197.38125,42.13125 L 195.88125,46.38125 L 194.1625,48.50625 L 193.75625,51.2875 L 191.81875,52.7875 L 188.225,53.63125 L 187.7875,53.4125 L 186.50625,52.56875 L 185.00625,52.35 L 184.1625,51.2875 L 182.6625,50.63125 L 182.25625,48.725 L 181.4125,47.88125 L 178.63125,47.0375 L 175.225,46.6 L 173.4125,44.19375 L 173.4125,117.35 L 194.1625,117.35 L 194.1625,134.2875 L 247.2875,134.35 L 248.1625,133.88125 L 248.1,133.35 L 248.81875,133.2875 L 248.9125,132.1625 L 250.00625,132.25625 L 250.7875,131.06875 L 251.35,131.0375 L 252.6625,131.44375 L 253.94375,131.6625 L 255.38125,131.1625 L 256.2875,131.06875 L 256.50625,131.6 L 257.225,131.5375 L 257.975,131.81875 L 258.56875,132.13125 L 260.19375,132.1625 L 261.31875,132.4125 L 261.975,133.25625 L 262.38125,133.75625 L 262.81875,134.44375 L 262.88125,135.1625 L 263.35,136.225 L 264.0375,135.7875 L 264.35,135.225 L 265.00625,134.4125 L 265.6625,133.63125 L 266.06875,134.31875 L 266.85,134.6 L 267.88125,134.13125 L 268.00625,133.56875 L 268.6625,132.7875 L 267.94375,132.85 L 267.6625,131.7875 L 267.75625,131.0375 L 268.6625,130.94375 L 269.75625,130.85 L 270.4125,130.225 L 271.2875,129.6 L 272.225,129.88125 L 273.0375,130.69375 L 274.06875,130.225 L 275.00625,130.50625 L 275.56875,130.44375 L 276.06875,130.225 L 276.6,129.81875 L 277.50625,129.9125 L 278.475,129.88125 L 278.50625,129.44375 L 277.6625,128.6 L 277.06875,126.0375 L 276.6,124.13125 L 275.975,123.25625 L 275.31875,123.69375 L 275.75625,123.0375 L 274.88125,122.63125 L 275.5375,121.975 L 274.88125,121.35 L 275.75625,120.9125 L 275.1,120.2875 L 275.1,119.63125 L 276.1625,120.9125 L 275.5375,119.00625 L 275.31875,119.63125 L 275.75625,117.94375 L 275.31875,117.6625 L 275.5375,115.81875 L 275.1,115.81875 L 275.975,112.4125 L 275.5375,112.4125 L 275.1,111.5375 L 274.69375,112.81875 L 274.88125,111.75625 L 274.25625,111.75625 L 274.69375,111.35 L 273.81875,110.69375 L 273.81875,109.4125 L 274.475,108.7875 L 273.19375,109.19375 L 274.25625,108.7875 L 274.0375,107.725 L 271.69375,107.06875 L 272.35,106.6625 L 271.06875,105.1625 L 271.2875,104.31875 L 270.63125,103.88125 L 270.4125,104.31875 L 270.63125,103.6625 L 269.35,103.0375 L 269.35,103.25625 L 268.2875,102.19375 L 267.225,99.4125 L 266.38125,99.19375 L 266.6,98.35 L 266.1625,98.975 L 266.1625,98.35 L 265.5375,98.13125 L 265.94375,98.975 L 265.1,98.56875 L 265.1,98.975 L 264.25625,98.56875 L 264.25625,98.975 L 261.475,95.1625 L 260.85,96.00625 L 259.975,94.725 L 260.4125,94.50625 L 259.7875,93.225 L 260.19375,92.81875 L 259.56875,90.475 L 259.975,90.475 L 260.19375,88.75625 L 259.7875,87.69375 L 259.7875,88.35 L 259.35,88.13125 L 258.9125,87.2875 L 259.56875,87.50625 L 259.7875,87.2875 L 259.13125,86.225 L 259.13125,87.06875 L 258.9125,86.225 L 258.50625,86.00625 L 258.2875,86.63125 L 258.9125,87.69375 L 258.50625,87.50625 L 258.9125,88.56875 L 255.94375,86.4125 L 254.88125,84.725 L 254.6625,85.1625 L 254.0375,86.225 L 254.6625,87.69375 L 255.1,88.56875 L 254.6625,88.13125 L 253.38125,86.63125 L 252.1,88.13125 L 252.75625,86.63125 L 251.88125,86.63125 L 252.31875,86.4125 L 252.1,86.00625 L 251.25625,86.225 L 252.1,85.7875 L 250.81875,82.81875 L 251.25625,80.475 L 251.0375,80.88125 L 250.19375,80.0375 L 249.975,80.475 L 249.975,78.5375 L 249.13125,78.975 L 249.35,78.31875 L 249.13125,78.31875 L 249.5375,77.25625 L 248.69375,76.4125 L 248.06875,76.85 L 248.25625,76.00625 L 246.7875,76.00625 L 246.56875,75.35 L 247.00625,75.13125 L 245.94375,74.50625 L 246.13125,74.06875 L 245.50625,73.44375 L 246.13125,73.225 L 245.725,72.7875 L 246.35,73.00625 L 246.56875,72.56875 L 247.63125,73.44375 L 246.35,71.31875 L 245.94375,71.50625 L 245.94375,70.88125 L 245.2875,70.88125 L 245.06875,70.0375 L 244.44375,70.0375 L 244.225,70.0375 L 244.225,70.88125 L 243.6,70.6625 L 242.725,69.81875 L 242.94375,69.6 L 242.94375,69.38125 L 241.88125,68.75625 L 240.6,68.975 L 240.19375,67.475 L 239.5375,67.475 L 239.975,68.5375 L 239.1,68.31875 L 237.85,67.0375 L 238.69375,67.475 L 237.4125,64.69375 L 237.4125,65.56875 L 235.50625,65.75625 L 234.63125,63.85 L 234.44375,64.69375 L 233.7875,64.69375 L 233.1625,63.85 L 231.00625,63.00625 L 229.75625,61.50625 L 230.1625,59.1625 L 229.31875,59.1625 L 227.81875,56.6 L 228.88125,52.975 L 228.475,52.975 L 228.475,51.2875 L 227.19375,48.94375 L 227.6,47.88125 L 226.5375,48.1 L 224.00625,44.69375 L 224.00625,43.63125 L 224.4125,43.63125 L 224.4125,42.13125 L 223.56875,41.06875 L 223.35,38.725 L 222.50625,37.88125 L 223.56875,36.6 L 223.56875,36.38125 L 222.9125,36.6 L 222.725,35.5375 L 223.56875,34.475 L 223.13125,34.475 L 222.725,33.6 L 221.44375,33.4125 L 220.56875,32.13125 L 219.1,31.69375 L 218.0375,28.9125 L 216.75625,29.975 L 215.9125,29.56875 L 215.475,30.85 L 214.19375,31.475 L 213.13125,30.63125 L 212.50625,27.85 L 211.4125,26.1625 L 211.85,24.0375 L 211.225,21.9125 L 211.4125,19.975 L 210.1625,20.4125 L 210.7875,18.475 L 209.50625,17.63125 L 209.50625,16.7875 L 208.44375,16.56875 L 208.225,15.06875 L 209.50625,14.00625 L 208.44375,13.6 L 207.6,13.81875 L 206.94375,13.1625 L 206.94375,9.975 L 206.1,7.4125 L 205.475,7.4125 L 205.0375,6.56875 L 205.0375,6.975 L 204.19375,7.4125 L 205.25625,5.69375 L 205.0375,5.50625 L 204.81875,5.2875 z M 275.536,104.1 L 276.386,105.378 L 274.682,107.295 L 275.109,107.295 L 274.682,108.785 L 274.258,109.85 L 275.109,111.341 L 277.026,105.59 L 276.599,104.738 L 276.599,103.248 L 275.536,104.1 z M 183.536,45.961 L 184.173,46.174 L 184.813,44.896 L 185.026,45.535 L 185.876,45.322 L 184.813,44.258 L 183.109,44.896 L 182.045,45.961 L 183.109,46.6 L 183.536,45.961 z\",\n\t\t\t\"abbreviation\": \"QLD\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"Queensland\",\n\t\t\t\t\"x\": 215,\n\t\t\t\t\"y\": 100\n\t\t\t}\n\t\t},\n\t\t\"WA\": {\n\t\t\t\"dimensions\": \"M 113.85,156.31875 L 113.85,117.35 L 113.85,117.35 L 113.85,33.81875 L 112.6,33.81875 L 112.19375,33.38125 L 111.35,33.19375 L 110.06875,33.38125 L 110.9125,34.0375 L 111.13125,34.88125 L 110.2875,33.81875 L 110.9125,34.88125 L 110.69375,34.6625 L 110.475,35.1 L 110.06875,34.6625 L 109.85,35.5375 L 109.4125,34.44375 L 109.00625,35.1 L 110.06875,38.06875 L 109.63125,38.06875 L 109.4125,37.00625 L 108.35,35.94375 L 108.35,37.6625 L 107.725,38.2875 L 108.13125,37.44375 L 107.725,36.7875 L 108.13125,36.6 L 107.9125,35.31875 L 108.56875,33.81875 L 108.13125,33.81875 L 109.00625,33.6 L 108.56875,32.975 L 109.00625,32.75625 L 107.50625,31.69375 L 107.2875,32.13125 L 105.38125,29.13125 L 103.88125,28.2875 L 103.6625,27.44375 L 103.0375,27.225 L 103.25625,27.85 L 102.6,27.225 L 102.1625,27.63125 L 102.1625,27.225 L 101.75625,27.63125 L 101.31875,26.56875 L 100.0375,26.1625 L 100.0375,26.56875 L 99.19375,26.38125 L 99.63125,27.44375 L 100.475,27.85 L 100.1,27.81875 L 98.975,27.63125 L 99.19375,28.2875 L 98.75625,28.725 L 98.56875,28.2875 L 98.35,29.56875 L 97.69375,28.2875 L 97.2875,28.50625 L 97.69375,27.44375 L 96.4125,28.2875 L 96.225,28.725 L 96.63125,29.13125 L 95.7875,29.56875 L 95.56875,28.50625 L 95.1625,28.50625 L 95.56875,28.06875 L 95.1625,28.06875 L 95.56875,27.63125 L 94.94375,28.06875 L 94.2875,27.85 L 94.2875,28.2875 L 94.1,27.85 L 94.1,28.2875 L 95.35,28.9125 L 94.50625,29.56875 L 94.725,30.19375 L 94.1,30.63125 L 94.50625,31.475 L 93.6625,31.475 L 93.6625,32.5375 L 93.00625,31.9125 L 93.225,31.06875 L 92.38125,31.25625 L 92.38125,30.63125 L 91.75625,32.31875 L 91.94375,30.4125 L 92.38125,29.7875 L 91.5375,29.35 L 91.5375,31.69375 L 90.88125,31.475 L 90.475,32.31875 L 90.25625,31.69375 L 89.81875,32.13125 L 90.0375,31.25625 L 89.19375,32.13125 L 89.6,32.31875 L 88.31875,32.975 L 88.975,33.81875 L 89.6,33.81875 L 88.75625,34.475 L 90.0375,34.88125 L 90.25625,34.475 L 90.6625,34.6625 L 89.81875,35.5375 L 90.88125,35.94375 L 89.81875,35.94375 L 89.4125,35.31875 L 88.5375,35.94375 L 87.9125,34.475 L 87.475,34.6625 L 87.69375,35.5375 L 86.4125,35.725 L 86.85,35.94375 L 86.63125,36.6 L 87.9125,35.725 L 86.63125,36.81875 L 87.06875,37.225 L 88.13125,36.6 L 88.13125,37.00625 L 88.5375,37.00625 L 87.9125,37.6625 L 89.19375,38.725 L 88.13125,37.88125 L 87.69375,38.2875 L 87.25625,37.44375 L 86.4125,37.225 L 86.4125,36.7875 L 85.7875,37.225 L 85.35,38.06875 L 85.13125,37.6625 L 84.9125,38.2875 L 84.06875,38.06875 L 84.2875,38.2875 L 83.44375,38.94375 L 83.85,39.13125 L 83.225,39.35 L 84.06875,41.69375 L 84.2875,41.31875 L 84.2875,41.475 L 84.725,40.85 L 84.35,41.19375 L 84.9125,40.19375 L 85.56875,39.7875 L 85.13125,40.19375 L 85.7875,40.19375 L 84.9125,40.85 L 84.725,42.35 L 85.13125,42.35 L 84.2875,42.75625 L 84.725,42.975 L 84.2875,43.19375 L 83.85,42.13125 L 83.44375,44.0375 L 84.9125,43.81875 L 85.75625,44.25625 L 83.85,44.475 L 83.44375,44.0375 L 83.00625,44.475 L 83.38125,44.69375 L 82.38125,44.88125 L 83.00625,44.69375 L 82.38125,44.475 L 81.725,43.63125 L 80.25625,42.975 L 80.88125,43.63125 L 80.44375,43.63125 L 80.88125,44.25625 L 80.0375,43.63125 L 80.0375,43.81875 L 78.975,43.4125 L 79.38125,43.4125 L 79.1625,42.975 L 79.6,42.975 L 78.75625,42.5375 L 78.75625,42.975 L 78.1,42.75625 L 78.31875,43.19375 L 77.9125,42.75625 L 78.31875,43.4125 L 77.9125,43.63125 L 78.75625,43.81875 L 78.975,44.25625 L 78.31875,44.0375 L 78.975,44.475 L 78.5375,44.475 L 78.31875,44.475 L 77.475,44.475 L 78.5375,45.1 L 77.06875,45.1 L 77.475,45.75625 L 77.69375,45.31875 L 78.31875,45.5375 L 77.475,46.1625 L 78.975,46.6 L 79.38125,47.88125 L 80.25625,47.44375 L 80.25625,47.0375 L 80.6625,47.225 L 79.6,48.2875 L 80.0375,48.725 L 79.38125,48.50625 L 80.475,50.44375 L 78.5375,48.50625 L 77.9125,48.725 L 78.75625,50.225 L 78.31875,50.00625 L 77.9125,51.06875 L 77.9125,52.13125 L 76.63125,50.85 L 75.975,48.725 L 75.13125,48.1 L 75.13125,46.38125 L 74.50625,46.38125 L 73.85,45.75625 L 74.06875,44.88125 L 74.725,44.69375 L 74.2875,44.0375 L 73.63125,44.25625 L 72.38125,46.38125 L 73.00625,47.0375 L 71.2875,46.81875 L 71.1,47.44375 L 71.50625,48.2875 L 70.6625,47.88125 L 70.6625,48.2875 L 69.81875,48.50625 L 69.1625,49.38125 L 69.6,49.56875 L 68.5375,50.44375 L 68.31875,52.35 L 68.94375,53.85 L 68.5375,55.31875 L 70.0375,55.5375 L 70.0375,56.38125 L 67.0375,58.5375 L 66.19375,58.725 L 65.5375,59.6 L 65.975,60.225 L 64.9125,60.44375 L 65.13125,61.2875 L 64.06875,63.225 L 61.50625,66.4125 L 55.5375,68.975 L 54.0375,69.1625 L 52.56875,69.1625 L 51.9125,69.6 L 51.06875,70.225 L 50.44375,69.6 L 48.50625,69.1625 L 48.725,69.6 L 48.725,69.81875 L 48.50625,69.6 L 48.1,69.38125 L 47.88125,69.6 L 46.38125,71.50625 L 41.9125,72.38125 L 41.9125,71.94375 L 40.225,73.00625 L 40.4125,73.44375 L 39.7875,73.44375 L 39.35,74.2875 L 38.2875,74.50625 L 38.2875,74.2875 L 36.6,75.13125 L 35.31875,74.50625 L 35.1,73.85 L 33.6,74.725 L 32.975,74.50625 L 32.5375,74.2875 L 33.19375,73.225 L 32.75625,73.225 L 31.69375,74.50625 L 31.9125,74.725 L 31.475,74.725 L 29.35,75.7875 L 28.69375,75.35 L 28.50625,76.4125 L 26.7875,77.25625 L 26.1625,78.5375 L 25.1,78.75625 L 24.0375,80.475 L 19.975,81.5375 L 18.2875,82.6 L 18.06875,83.88125 L 17.63125,84.06875 L 17.19375,83.88125 L 17.4125,84.725 L 16.7875,85.7875 L 17.19375,86.225 L 16.7875,86.00625 L 17.00625,86.4125 L 16.13125,87.475 L 15.725,86.85 L 14.6625,87.475 L 15.06875,86.00625 L 14.6625,86.4125 L 14.44375,84.94375 L 15.2875,82.38125 L 13.7875,82.81875 L 11.6625,87.9125 L 12.725,90.69375 L 12.31875,91.975 L 12.5375,94.50625 L 10.38125,97.50625 L 9.975,101.31875 L 11.6625,104.1 L 11.44375,104.5375 L 11.88125,106.225 L 12.725,106.88125 L 15.06875,111.56875 L 15.725,111.75625 L 15.94375,112.81875 L 15.2875,112.81875 L 15.50625,115.1625 L 14.44375,116.44375 L 13.38125,114.75625 L 13.1625,112.4125 L 13.1625,113.475 L 12.1,114.31875 L 12.31875,111.975 L 10.6,109.225 L 9.975,110.9125 L 10.38125,111.35 L 10.38125,110.475 L 11.0375,113.69375 L 13.1625,115.38125 L 12.94375,117.31875 L 11.6625,117.94375 L 11.44375,116.44375 L 11.25625,117.725 L 10.81875,115.1625 L 10.6,116.44375 L 9.75625,113.0375 L 9.975,115.81875 L 9.31875,115.38125 L 9.31875,113.0375 L 9.13125,114.75625 L 8.25625,114.1 L 13.7875,122.19375 L 15.06875,125.6 L 14.6625,126.6625 L 15.06875,128.81875 L 17.4125,131.56875 L 18.06875,132.85 L 17.85,133.69375 L 19.75625,136.25625 L 20.63125,139.25625 L 20.4125,143.06875 L 20.4125,143.50625 L 21.0375,146.9125 L 25.2875,155.85 L 25.50625,159.0375 L 26.56875,158.4125 L 26.56875,158.81875 L 25.50625,159.0375 L 25.725,160.1 L 25.2875,160.75625 L 25.50625,162.25625 L 24.6625,163.94375 L 25.2875,168.85 L 22.975,171.6 L 21.88125,171.6 L 20.63125,170.75625 L 20.63125,175.225 L 21.475,177.56875 L 21.69375,177.1625 L 22.94375,176.94375 L 25.2875,178.225 L 27.225,181.19375 L 29.7875,182.0375 L 29.975,181.4125 L 30.85,182.0375 L 29.7875,182.0375 L 31.475,183.1 L 32.13125,182.475 L 33.38125,183.1 L 36.38125,182.69375 L 38.06875,183.75625 L 38.50625,182.88125 L 40.4125,183.5375 L 40.85,183.31875 L 39.7875,182.88125 L 40.225,182.0375 L 40.63125,181.81875 L 40.4125,182.69375 L 42.13125,182.69375 L 41.9125,182.0375 L 43.4125,181.81875 L 43.63125,180.5375 L 45.5375,179.69375 L 45.75625,178.85 L 46.81875,178.4125 L 46.38125,178.00625 L 49.1625,178.85 L 49.38125,178.00625 L 50.225,178.225 L 50.225,177.35 L 51.2875,177.56875 L 50.44375,176.725 L 53.4125,173.94375 L 54.0375,173.94375 L 56.81875,174.38125 L 57.88125,173.5375 L 63.225,172.88125 L 65.975,173.725 L 67.475,173.1 L 68.31875,174.6 L 69.38125,174.6 L 69.81875,173.725 L 71.2875,174.1625 L 71.50625,173.5375 L 74.2875,173.31875 L 74.9125,173.725 L 75.13125,174.6 L 76.63125,173.5375 L 77.69375,173.94375 L 80.6625,170.975 L 81.5375,167.56875 L 82.38125,166.69375 L 86.225,165.44375 L 93.88125,160.94375 L 95.56875,160.5375 L 98.7875,160.94375 L 102.38125,160.75625 L 109.225,158.63125 L 113.85,156.31875 z M 87.25625,44.25625 L 86.19375,44.69375 L 85.81875,44.2875 L 86.19375,44.475 L 87.25625,44.25625 z M 8.693,113.044 L 6.989,109.211 L 6.989,111.341 L 8.693,114.109 L 8.693,113.044 z\",\n\t\t\t\"abbreviation\": \"WA\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"Western\\nAustralia\",\n\t\t\t\t\"x\": 65,\n\t\t\t\t\"y\": 110\n\t\t\t}\n\t\t},\n\t\t\"VIC\": {\n\t\t\t\"dimensions\": \"M 253.1625,203.75625 L 252.5375,203.13125 L 252.725,203.13125 L 252.00625,202.475 L 250.2875,202.35 L 242.1,198.2875 L 242.25625,196.94375 L 241.9125,195.85 L 241.19375,194.81875 L 240.63125,193.6 L 240.81875,192.44375 L 239.4125,191.69375 L 238.50625,192.0375 L 237.7875,192.31875 L 237.0375,192.44375 L 235.975,192.7875 L 234.50625,193.19375 L 232.56875,192.725 L 231.50625,192.13125 L 230.63125,192.44375 L 229.975,193.13125 L 228.7875,192.9125 L 227.56875,192.35 L 226.6625,192.475 L 225.225,191.75625 L 223.38125,192.0375 L 222.5375,191.6 L 221.81875,191.69375 L 221.31875,192.35 L 221.56875,193.81875 L 220.25625,194.00625 L 218.63125,193.31875 L 217.35,192.38125 L 216.975,191.1 L 215.00625,189.31875 L 213.38125,188.63125 L 212.25625,188.6 L 210.81875,186.5375 L 210.19375,183.7875 L 209.19375,183.38125 L 207.475,183.25625 L 206.50625,183.0375 L 205.44375,183.56875 L 205.4125,184.5375 L 204.31875,183.56875 L 203.81875,181.5375 L 202.1,180.1 L 199.975,179.85 L 198.225,179.56875 L 197.19375,180.2875 L 195.35,179.4125 L 194.225,179.6 L 194.1625,179.38125 L 194.1625,207.7875 L 194.6,207.81875 L 196.94375,209.725 L 196.94375,210.7875 L 197.6,210.56875 L 198.225,211.00625 L 199.50625,209.50625 L 202.06875,210.7875 L 203.75625,210.35 L 211.63125,214.63125 L 214.85,211.44375 L 217.38125,209.725 L 218.88125,209.725 L 219.31875,208.44375 L 217.81875,208.88125 L 216.975,208.225 L 218.0375,208.225 L 220.7875,206.1 L 222.06875,208.6625 L 220.7875,210.35 L 218.88125,209.94375 L 220.7875,211.63125 L 222.06875,210.7875 L 222.725,211.00625 L 222.9125,209.2875 L 224.4125,209.2875 L 224.85,210.56875 L 224.00625,210.7875 L 223.7875,212.06875 L 225.25625,213.13125 L 226.75625,212.9125 L 226.975,213.35 L 226.35,213.13125 L 227.4125,215.0375 L 228.25625,214.4125 L 229.1,214.85 L 228.88125,214.19375 L 229.75625,215.9125 L 230.81875,216.975 L 231.225,214.19375 L 229.94375,215.0375 L 229.5375,213.35 L 231.6625,213.35 L 234.19375,212.50625 L 238.25625,208.225 L 241.0375,206.5375 L 237.63125,208.00625 L 239.5375,206.75625 L 239.475,206.6625 L 238.9125,206.1 L 240.38125,206.5375 L 242.1,205.88125 L 241.88125,206.31875 L 251.25625,205.475 L 253.1625,203.75625 z \",\n\t\t\t\"abbreviation\": \"VIC\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"Victoria\",\n\t\t\t\t\"x\": 220,\n\t\t\t\t\"y\": 204\n\t\t\t}\n\t\t},\n\t\t\"SA\": {\n\t\t\t\"dimensions\": \"M 194.1625,207.7875 L 194.1625,179.38125 L 194.1625,179.35 L 194.1625,134.2875 L 194.1625,117.35 L 173.4125,117.35 L 173.4125,117.35 L 113.85,117.35 L 113.85,156.31875 L 114.31875,156.06875 L 120.9125,155.4125 L 121.975,155.19375 L 126.25625,155.63125 L 128.6,154.35 L 132.63125,156.475 L 135.63125,158.81875 L 137.5375,158.81875 L 137.31875,158.4125 L 137.75625,158.19375 L 139.225,158.19375 L 141.7875,160.31875 L 144.35,160.31875 L 143.69375,159.69375 L 144.13125,159.475 L 144.56875,159.88125 L 144.975,159.25625 L 147.31875,161.6 L 146.69375,161.81875 L 146.69375,162.88125 L 147.975,162.225 L 148.81875,162.44375 L 149.6625,164.1625 L 149.0375,165.00625 L 149.25625,164.35 L 148.19375,164.35 L 148.6,165.225 L 148.19375,165.85 L 149.0375,166.06875 L 148.6,166.69375 L 149.88125,167.975 L 149.475,166.69375 L 150.1,167.975 L 150.725,167.56875 L 152.00625,168.4125 L 151.38125,167.7875 L 152.44375,167.975 L 152.00625,168.4125 L 153.2875,170.13125 L 153.2875,171.38125 L 155.63125,173.5375 L 156.9125,179.2875 L 157.13125,178.63125 L 157.35,179.2875 L 157.75625,179.475 L 156.9125,179.69375 L 156.475,178.85 L 156.69375,178.63125 L 155.85,178.4125 L 155.85,178.00625 L 155.19375,179.2875 L 156.06875,178.85 L 158.63125,182.0375 L 159.69375,181.4125 L 160.75625,182.69375 L 161.1625,180.35 L 159.69375,180.975 L 160.31875,180.5375 L 160.5375,178.85 L 161.38125,178.4125 L 161.81875,178.85 L 161.81875,177.35 L 165.00625,173.725 L 167.56875,172.44375 L 166.9125,172.6625 L 167.35,171.81875 L 167.7875,172.25625 L 169.25625,171.81875 L 170.75625,167.56875 L 172.0375,166.06875 L 172.88125,166.50625 L 172.88125,162.225 L 173.94375,164.56875 L 174.1625,166.50625 L 174.7875,167.13125 L 173.1,168.63125 L 174.38125,170.975 L 171.81875,173.5375 L 171.19375,175.44375 L 170.75625,175.6625 L 171.19375,176.94375 L 170.5375,178.19375 L 170.975,178.00625 L 171.19375,179.25625 L 170.75625,181.81875 L 170.31875,182.25625 L 167.7875,181.6 L 166.69375,184.81875 L 168.85,184.6 L 170.5375,183.31875 L 172.0375,183.94375 L 172.88125,183.5375 L 172.44375,183.1 L 173.50625,180.75625 L 173.725,178.63125 L 175.00625,175.6625 L 178.00625,180.81875 L 178.19375,181.19375 L 177.7875,181.4125 L 177.56875,180.75625 L 177.35,185.44375 L 175.00625,187.56875 L 178.00625,187.7875 L 179.25625,186.725 L 180.35,186.94375 L 183.5375,189.475 L 180.35,187.1625 L 183.1,189.2875 L 184.9125,191.63125 L 183.5375,189.50625 L 184.6,190.35 L 185.88125,193.13125 L 185.31875,192.25625 L 186.94375,196.5375 L 186.725,197.6 L 185.6625,198.6625 L 186.50625,199.94375 L 186.1,200.56875 L 187.7875,202.9125 L 190.25625,206.225 L 190.35,206.5375 L 191.63125,207.6 L 194.1625,207.7875 z M 172.887,189.499 L 173.1,188.433 L 171.608,188.433 L 172.035,187.156 L 165.007,188.646 L 164.581,189.711 L 165.86,191.202 L 167.777,190.989 L 169.267,190.563 L 170.97,191.415 L 171.822,190.776 L 172.035,189.923 L 174.804,189.923 L 175.229,189.072 L 173.738,188.433 L 172.887,189.499 z \",\n\t\t\t\"abbreviation\": \"SA\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"South\\nAustralia\",\n\t\t\t\t\"x\": 155,\n\t\t\t\t\"y\": 135\n\t\t\t}\n\t\t},\n\t\t\"TAS\": {\n\t\t\t\"dimensions\": \"M 214.201,220.804 L 213.563,222.082 L 213.776,224.637 L 213.776,225.489 L 214.201,225.915 L 215.48,224.637 L 215.267,221.656 L 214.201,220.804 z M 240.397,223.785 L 240.397,224.637 L 241.248,225.489 L 241.887,226.98 L 243.59,226.34 L 243.165,225.276 L 242.738,225.702 L 243.165,224.637 L 243.377,224.211 L 242.525,224.211 L 240.821,222.082 L 239.544,223.573 L 240.397,223.785 z M 239.118,250.619 L 238.693,251.897 L 239.544,252.109 L 239.118,252.536 L 239.757,253.387 L 240.397,253.174 L 240.397,252.322 L 241.248,253.387 L 240.821,251.47 L 239.757,251.683 L 239.118,250.619 z M 243.377,238.692 L 242.952,237.415 L 243.59,235.711 L 242.952,235.073 L 243.59,233.368 L 241.887,231.239 L 240.821,231.026 L 240.397,232.304 L 239.118,231.665 L 237.627,233.368 L 236.563,232.729 L 235.498,233.582 L 234.646,233.156 L 233.156,233.794 L 234.22,234.86 L 234.006,235.285 L 232.729,233.794 L 231.666,234.646 L 231.876,235.499 L 231.452,234.433 L 229.536,234.86 L 224.637,231.877 L 223.359,231.877 L 222.932,230.813 L 222.932,231.665 L 222.082,231.452 L 222.082,231.877 L 219.1,230.387 L 219.314,232.09 L 218.674,233.368 L 219.525,236.989 L 221.017,239.119 L 220.59,239.544 L 222.721,242.313 L 222.721,244.229 L 223.359,243.59 L 224.424,245.507 L 224.849,245.507 L 224.424,246.998 L 224.211,245.721 L 222.294,244.016 L 222.932,247.85 L 223.572,248.063 L 224.637,251.257 L 225.702,251.683 L 226.766,254.026 L 227.406,254.026 L 226.979,253.813 L 227.406,252.96 L 227.832,254.239 L 229.536,254.239 L 229.322,254.665 L 227.832,254.239 L 227.832,254.877 L 227.406,254.665 L 228.044,256.369 L 229.536,255.729 L 231.876,256.156 L 231.666,255.517 L 232.516,257.007 L 233.793,257.007 L 234.646,255.729 L 234.006,255.09 L 234.86,255.304 L 235.073,254.452 L 234.433,254.239 L 235.286,253.813 L 234.433,252.749 L 234.646,252.322 L 234.646,252.96 L 235.073,253.387 L 235.286,252.749 L 235.286,253.387 L 236.136,253.813 L 236.35,251.47 L 236.99,251.683 L 236.99,250.406 L 235.923,248.702 L 237.414,250.619 L 237.84,250.406 L 237.414,251.683 L 238.267,251.044 L 238.053,249.98 L 238.693,249.767 L 237.627,249.128 L 238.693,249.34 L 239.118,250.406 L 239.97,250.193 L 241.035,248.276 L 240.397,247.211 L 241.248,246.785 L 241.46,245.082 L 240.821,245.294 L 241.887,243.165 L 242.525,243.165 L 241.887,242.952 L 242.738,241.674 L 242.313,242.952 L 243.377,243.377 L 243.377,244.656 L 243.804,244.016 L 243.165,242.526 L 243.377,238.692 z M 241.248,228.257 L 243.377,228.257 L 243.59,228.897 L 244.442,228.257 L 243.59,227.192 L 241.248,228.257 z\",\n\t\t\t\"abbreviation\": \"TAS\",\n\t\t\t\"label\": {\n\t\t\t\t\"textAnchor\": \"right\",\n\t\t\t\t\"name\": \"Tasmania\",\n\t\t\t\t\"x\": 155,\n\t\t\t\t\"y\": 245,\n\t\t\t\t\"fill\": \"black\"\n\t\t\t}\n\t\t},\n\t\t\"ACT\": {\n\t\t\t\"dimensions\": \"M 245.95389,185.84376 C 246.41125,185.82547 246.88157,185.90065 247.31277,186.09855 C 247.68261,186.26829 247.80326,186.51013 247.77989,186.77799 C 247.75652,187.04585 247.56857,187.345 247.35524,187.66976 C 246.92856,188.31926 246.34574,189.03605 246.37854,189.66562 C 246.30185,190.01096 245.94449,190.75975 245.44431,190.85464 C 245.19422,190.90208 244.88988,190.78812 244.59501,190.38752 C 244.30013,189.98692 244.00218,189.28493 243.70324,188.17934 C 243.52074,187.5044 243.73358,186.9315 244.17036,186.5232 C 244.60713,186.1149 245.26786,185.87121 245.95389,185.84376 z\",\n\t\t\t\"abbreviation\": \"ACT\",\n\t\t\t\"label\": {\n\t\t\t\t\"name\": \"Australian\\nCapital\\nTerritory\",\n\t\t\t\t\"x\": 260,\n\t\t\t\t\"y\": 190,\n\t\t\t\t\"fill\": \"black\",\n\t\t\t\t\"textAnchor\": \"left\"\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar State = function State(props) {\n\t  return _react2.default.createElement('path', {\n\t    className: props.state + ' state',\n\t    d: props.dimensions,\n\t    'data-name': props.state,\n\t    fill: props.fill,\n\t    onClick: props.onClickState,\n\t    stroke: props.stroke,\n\t    strokeWidth: props.strokeWidth });\n\t};\n\t\n\tState.propTypes = {\n\t  dimensions: _propTypes2.default.string,\n\t  fill: _propTypes2.default.string,\n\t  onClickState: _propTypes2.default.func,\n\t  state: _propTypes2.default.string,\n\t  stroke: _propTypes2.default.string,\n\t  strokeWidth: _propTypes2.default.number\n\t};\n\t\n\texports.default = State;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-australia-map.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 15c8629bacebf40083cf\n **/","import React from 'react';\nimport PropTypes from 'prop-types';\nimport data from './data/australia-map-dimensions';\nimport State from './components/State';\n\nclass AustraliaMap extends React.Component {\n  clickHandler(stateAbbreviation) {\n    this.props.onClick(stateAbbreviation);\n  }\n\n  customStyle(state, style) {\n    if (this.props.customize && this.props.customize[state] && this.props.customize[state][style]) {\n      return this.props.customize[state][style];\n    }\n\n    return this.props[style];\n  }\n\n  customLabelStyle(state, style) {\n    const dataState = data[state].label;\n\n    if (this.props.customize &&\n        this.props.customize[state] &&\n        this.props.customize[state].label &&\n        this.props.customize[state].label[style]) {\n      return this.props.customize[state].label[style];\n    }\n\n    return dataState[style] || this.props.label[style] || null;\n  }\n\n  styleProps(state) {\n    const styles = {\n      fill: this.customStyle(state, 'fill'),\n      stroke: this.customStyle(state, 'stroke'),\n      strokeWidth: this.customStyle(state, 'strokeWidth')\n    };\n\n    if (styles.strokeWidth === 0) {\n      styles.stroke = styles.fill;\n      styles.strokeWidth = 1;\n    }\n\n    return styles;\n  }\n\n  styleLabelProps(state) {\n    return {\n      fill: this.customLabelStyle(state, 'fill'),\n      stroke: this.customLabelStyle(state, 'stroke'),\n      strokeWidth: this.customLabelStyle(state, 'strokeWidth'),\n      fontSize: this.customLabelStyle(state, 'fontSize'),\n      textAnchor: this.customLabelStyle(state, 'textAnchor'),\n      fontFamily: this.customLabelStyle(state, 'fontFamily')\n    };\n  }\n\n  stateClickHandler(state) {\n    if (this.props.customize &&\n        this.props.customize[state] &&\n        this.props.customize[state].clickHandler) {\n      return this.props.customize[state].clickHandler;\n    }\n    return this.clickHandler.bind(this);\n  }\n\n\n  buildPaths() {\n    const paths = [];\n\n    for (const stateKey in data) {\n      const path = (<State\n        dimensions={data[stateKey].dimensions}\n        {...this.styleProps(stateKey)}\n\n        showLabels={this.customStyle(stateKey, 'showLabels')}\n        labelPosition={data[stateKey].labelPosition}\n        label={data[stateKey].name}\n\n        key={stateKey}\n        onClickState={this.stateClickHandler(stateKey)}\n        state={stateKey}/>);\n\n      paths.push(path);\n    }\n    return paths;\n  }\n\n  buildLabels() {\n    const labels = [];\n\n    for (const stateKey in data) {\n      const showLabels = this.customStyle(stateKey, 'showLabels');\n\n      if (showLabels) {\n        const labelText = this.customLabelStyle(stateKey, 'name');\n\n        const label =\n          <text\n            key={stateKey}\n            state={stateKey}\n            x={this.customLabelStyle(stateKey, 'x')}\n            y={this.customLabelStyle(stateKey, 'y')}\n            {...this.styleLabelProps(stateKey)}\n            onClickState={this.stateClickHandler(stateKey)}\n            style={{ userSelect: 'none', cursor: 'default'}}\n          >\n            <tspan>\n              { labelText.split(\"\\n\").map((item, index) => {\n                return <tspan\n                  key={item}\n                  x={this.customLabelStyle(stateKey, 'x')}\n                  dy={`${Math.min(index, 1)}em`}>\n                  { item }\n                </tspan>;\n              })}\n            </tspan>\n          </text>;\n\n        labels.push(label);\n      }\n    }\n    return labels;\n  }\n\n  render() {\n    return (\n      <svg\n        className=\"au-state-map\"\n        height={this.props.height}\n        id={this.props.id || null}\n        viewBox=\"0 0 290 262\"\n        width={this.props.width}\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <title>{this.props.title}</title>\n        <g className=\"outlines\">\n          {this.buildPaths()}\n          {this.buildLabels()}\n        </g>\n      </svg>\n    );\n  }\n}\n\nAustraliaMap.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  width: PropTypes.oneOfType[PropTypes.number, PropTypes.string],\n  height: PropTypes.oneOfType[PropTypes.number, PropTypes.string],\n  title: PropTypes.string,\n  fill: PropTypes.string,\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  showLabels: PropTypes.bool,\n  label: PropTypes.object,\n  customize: PropTypes.object\n};\n\nAustraliaMap.defaultProps = {\n  onClick: () => {},\n  width: '100%',\n  height: 'auto',\n  fill: '#D3D3D3',\n  stroke: '#D3D3D3',\n  strokeWidth: 1,\n  title: 'Australia map',\n  showLabels: false,\n  label: {\n    textAnchor: 'middle',\n    fill: 'white',\n    fontSize: 11,\n    fontFamily: 'Verdana'\n  },\n  customize: {}\n};\n\nexport default AustraliaMap;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/index.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/factoryWithThrowingShims.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/emptyFunction.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/invariant.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/lib/ReactPropTypesSecret.js\n ** module id = 6\n ** module chunks = 0\n **/","import data from './australia-states-dimensions.json';\n\nexport default data;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/data/australia-map-dimensions.js\n **/","module.exports = {\n\t\"NSW\": {\n\t\t\"dimensions\": \"M 271.2875,129.6 L 270.4125,130.225 L 269.75625,130.85 L 268.6625,130.94375 L 267.75625,131.0375 L 267.6625,131.7875 L 267.94375,132.85 L 268.6625,132.7875 L 268.00625,133.56875 L 267.88125,134.13125 L 266.85,134.6 L 266.06875,134.31875 L 265.6625,133.63125 L 265.00625,134.4125 L 264.35,135.225 L 264.0375,135.7875 L 263.35,136.225 L 262.88125,135.1625 L 262.81875,134.44375 L 262.38125,133.75625 L 261.975,133.25625 L 261.31875,132.4125 L 260.19375,132.1625 L 258.56875,132.13125 L 257.975,131.81875 L 257.225,131.5375 L 256.50625,131.6 L 256.2875,131.06875 L 255.38125,131.1625 L 253.94375,131.6625 L 252.6625,131.44375 L 251.35,131.0375 L 250.7875,131.06875 L 250.00625,132.25625 L 248.9125,132.1625 L 248.81875,133.2875 L 248.1,133.35 L 248.1625,133.88125 L 247.2875,134.35 L 194.1625,134.2875 L 194.1625,179.35 L 194.1625,179.38125 L 194.225,179.6 L 195.35,179.4125 L 197.19375,180.2875 L 198.225,179.56875 L 199.975,179.85 L 202.1,180.1 L 203.81875,181.5375 L 204.31875,183.56875 L 205.4125,184.5375 L 205.44375,183.56875 L 206.50625,183.0375 L 207.475,183.25625 L 209.19375,183.38125 L 210.19375,183.7875 L 210.81875,186.5375 L 212.25625,188.6 L 213.38125,188.63125 L 215.00625,189.31875 L 216.975,191.1 L 217.35,192.38125 L 218.63125,193.31875 L 220.25625,194.00625 L 221.56875,193.81875 L 221.31875,192.35 L 221.81875,191.69375 L 222.5375,191.6 L 223.38125,192.0375 L 225.225,191.75625 L 226.6625,192.475 L 227.56875,192.35 L 228.7875,192.9125 L 229.975,193.13125 L 230.63125,192.44375 L 231.50625,192.13125 L 232.56875,192.725 L 234.50625,193.19375 L 235.975,192.7875 L 237.0375,192.44375 L 237.7875,192.31875 L 238.50625,192.0375 L 239.4125,191.69375 L 240.81875,192.44375 L 240.63125,193.6 L 241.19375,194.81875 L 241.9125,195.85 L 242.25625,196.94375 L 242.1,198.2875 L 250.2875,202.35 L 252.00625,202.475 L 252.725,203.13125 L 253.38125,203.13125 L 253.225,203.56875 L 253.35,203.6625 L 254.44375,203.13125 L 254.225,201.4125 L 254.6625,201.19375 L 255.1,201.19375 L 254.6625,200.13125 L 253.81875,199.9125 L 254.225,199.06875 L 253.81875,198.00625 L 254.225,198.225 L 254.6625,196.725 L 255.50625,193.31875 L 255.2875,191.19375 L 255.725,189.9125 L 255.2875,189.9125 L 256.35,189.06875 L 255.725,188.225 L 256.56875,188.4125 L 258.2875,184.38125 L 259.75625,183.94375 L 259.13125,182.6625 L 259.75625,182.475 L 259.75625,183.31875 L 260.19375,183.1 L 259.75625,181.81875 L 259.35,182.0375 L 259.56875,181.6 L 258.69375,181.4125 L 260.19375,180.75625 L 260.63125,179.25625 L 260.19375,178.63125 L 260.85,178.4125 L 260.85,176.9125 L 262.5375,175.225 L 261.9125,175.00625 L 262.975,174.7875 L 261.69375,174.38125 L 263.1625,174.1625 L 263.38125,173.1 L 262.75625,173.50625 L 262.31875,173.1 L 262.975,173.31875 L 262.75625,172.6625 L 263.38125,173.1 L 263.6,171.38125 L 263.6,171.1625 L 263.1625,171.6 L 263.1625,170.975 L 262.975,171.1625 L 262.75625,170.5375 L 263.38125,170.975 L 263.6,169.9125 L 263.6,170.75625 L 264.44375,170.31875 L 264.6625,169.25625 L 264.25625,168.85 L 265.1,168.85 L 265.725,167.13125 L 265.1,167.975 L 264.88125,167.13125 L 265.50625,167.13125 L 265.50625,166.2875 L 265.725,167.13125 L 266.6,165.63125 L 266.38125,165.225 L 266.7875,165.225 L 266.7875,165.85 L 269.35,164.35 L 268.50625,164.1625 L 267.6625,164.7875 L 267.44375,164.56875 L 267.85,164.1625 L 267.6625,163.725 L 268.50625,164.1625 L 269.13125,163.725 L 269.35,164.1625 L 270.19375,162.88125 L 271.69375,162.00625 L 271.9125,160.31875 L 271.25625,160.1 L 271.25625,160.5375 L 270.4125,160.1 L 271.25625,160.1 L 271.475,160.1 L 271.69375,158.6 L 273.19375,157.35 L 275.1,151.1625 L 274.88125,146.9125 L 276.38125,143.06875 L 276.6,142.4125 L 277.225,138.81875 L 276.6,138.38125 L 277.225,138.6 L 277.0375,137.75625 L 278.725,134.5375 L 278.2875,134.5375 L 278.725,134.35 L 278.94375,132.63125 L 278.2875,131.7875 L 278.475,129.88125 L 277.50625,129.9125 L 276.6,129.81875 L 276.06875,130.225 L 275.56875,130.44375 L 275.00625,130.50625 L 274.06875,130.225 L 273.0375,130.69375 L 272.225,129.88125 L 271.2875,129.6 z M 245.94375,185.85 C 246.4011,185.83171 246.88755,185.9021 247.31875,186.1 C 247.68859,186.26974 247.81087,186.51964 247.7875,186.7875 C 247.76413,187.05536 247.56333,187.33774 247.35,187.6625 C 246.92333,188.312 246.34845,189.03293 246.38125,189.6625 C 246.30457,190.00785 245.94393,190.75511 245.44375,190.85 C 245.19366,190.89744 244.89487,190.78185 244.6,190.38125 C 244.30512,189.98065 243.99269,189.29934 243.69375,188.19375 C 243.51125,187.5188 243.72572,186.9458 244.1625,186.5375 C 244.59927,186.1292 245.25772,185.87745 245.94375,185.85 z\",\n\t\t\"abbreviation\": \"NSW\",\n\t\t\"label\": {\n\t\t\t\"name\": \"New South\\nWales\",\n\t\t\t\"x\": 230,\n\t\t\t\"y\": 160\n\t\t}\n\t},\n\t\"NT\": {\n\t\t\"dimensions\": \"M 125.184,12.525 L 127.313,13.803 L 129.443,12.525 L 130.082,11.461 L 130.722,11.673 L 130.722,10.821 L 131.36,10.609 L 130.509,9.331 L 129.656,9.331 L 129.444,8.692 L 128.805,9.544 L 129.231,10.609 L 128.593,9.118 L 128.38,9.757 L 127.954,9.545 L 127.954,10.822 L 127.741,9.757 L 127.528,9.757 L 126.889,9.545 L 125.611,9.971 L 126.463,11.249 L 125.611,10.823 L 125.398,9.758 L 124.972,10.184 L 125.185,10.397 L 124.972,10.397 L 124.972,10.184 L 124.972,9.332 L 123.481,8.48 L 124.006,11.277 L 123.269,11.462 L 123.694,11.036 L 123.269,11.249 L 123.694,10.397 L 123.269,9.545 L 121.778,10.61 L 122.63,11.036 L 122.204,11.036 L 122.204,11.888 L 122.416,12.03 L 122.416,12.527 L 122.204,11.888 L 121.991,12.314 L 121.352,11.888 L 121.352,12.74 L 120.926,12.74 L 124.972,13.166 L 125.184,12.525 z M 113.85,33.81875 L 113.85,117.35 L 173.4125,117.35 L 173.4125,44.19375 L 172.6625,43.19375 L 170.5375,42.5375 L 167.75625,40.63125 L 167.13125,40.85 L 167.35,41.2875 L 166.2875,40.85 L 165.63125,41.06875 L 165.63125,40.19375 L 163.2875,39.13125 L 162.44375,37.44375 L 159.0375,35.31875 L 158.81875,35.5375 L 158.81875,35.1 L 158.19375,35.31875 L 157.13125,34.25625 L 156.69375,32.75625 L 157.975,32.31875 L 159.0375,29.7875 L 160.31875,29.13125 L 160.5375,27.85 L 161.6,25.50625 L 160.725,26.1625 L 160.31875,25.94375 L 160.1,24.0375 L 160.5375,24.225 L 160.94375,23.81875 L 160.31875,23.6 L 160.5375,22.975 L 161.1625,22.5375 L 161.38125,23.1625 L 162.00625,21.9125 L 162.225,22.975 L 162.44375,21.9125 L 163.06875,22.1 L 163.2875,21.475 L 163.725,22.5375 L 163.2875,23.1625 L 164.13125,22.75625 L 164.7875,21.475 L 164.13125,20.81875 L 165.4125,21.0375 L 164.13125,19.56875 L 164.56875,19.75625 L 164.7875,19.35 L 165.225,19.975 L 165.00625,19.13125 L 165.63125,19.13125 L 166.06875,18.06875 L 165.85,17.4125 L 166.2875,17.4125 L 166.2875,18.06875 L 167.56875,16.56875 L 166.2875,15.2875 L 165.63125,15.725 L 166.06875,16.13125 L 165.4125,16.13125 L 164.56875,14.225 L 164.13125,14.225 L 164.7875,13.38125 L 162.225,15.2875 L 163.725,15.725 L 163.06875,17.00625 L 162.44375,17.4125 L 161.6,17.225 L 161.1625,17.63125 L 161.1625,17.00625 L 160.725,17.00625 L 161.38125,15.94375 L 160.725,16.13125 L 160.5375,15.725 L 161.38125,14.6625 L 159.6625,15.50625 L 159.44375,16.1625 L 158.81875,15.725 L 160.5375,13.81875 L 158.19375,15.06875 L 157.975,14.6625 L 156.9125,14.88125 L 155.85,15.50625 L 156.69375,15.94375 L 155.4125,15.725 L 155.85,16.35 L 153.2875,15.2875 L 152.63125,13.81875 L 151.7875,14.88125 L 149.225,14.225 L 148.6,15.50625 L 149.0375,14.44375 L 148.6,13.6 L 148.1625,13.81875 L 147.94375,13.1625 L 147.1,13.81875 L 146.475,13.1625 L 147.1,12.5375 L 146.25625,12.31875 L 144.35,13.38125 L 144.5375,12.5375 L 144.13125,12.94375 L 143.69375,12.31875 L 143.06875,12.725 L 143.25625,12.1 L 142.00625,12.31875 L 140.50625,9.75625 L 140.06875,9.75625 L 140.2875,10.4125 L 139.85,10.19375 L 138.7875,11.0375 L 137.31875,8.9125 L 136.88125,9.5375 L 136.6625,8.25625 L 136.0375,8.69375 L 136.25625,9.31875 L 135.1625,8.25625 L 135.38125,9.5375 L 135.81875,9.75625 L 135.38125,10.4125 L 134.975,8.9125 L 134.1,8.25625 L 134.1,9.13125 L 133.0375,8.9125 L 133.25625,9.31875 L 132.85,9.75625 L 133.9125,9.5375 L 134.1,9.975 L 133.9125,10.19375 L 134.75625,10.4125 L 134.975,11.0375 L 135.81875,10.6 L 137.725,10.4125 L 137.725,10.81875 L 138.1625,10.81875 L 137.725,11.0375 L 138.38125,11.25625 L 137.94375,11.25625 L 138.38125,11.475 L 137.94375,11.6625 L 139.00625,11.6625 L 139.225,11.6625 L 138.1625,12.725 L 139.00625,13.38125 L 138.6,13.6 L 138.38125,14.88125 L 139.44375,15.2875 L 137.975,14.88125 L 137.31875,15.2875 L 137.1,16.56875 L 136.69375,15.50625 L 136.0375,15.94375 L 135.81875,15.2875 L 134.75625,16.35 L 133.69375,15.725 L 130.725,16.13125 L 129.88125,15.50625 L 129.6625,14.44375 L 129.225,15.725 L 127.5375,15.2875 L 127.94375,16.7875 L 126.88125,16.56875 L 126.475,17.00625 L 127.5375,17.85 L 126.6625,17.63125 L 127.06875,18.2875 L 126.6625,18.69375 L 126.25625,17.85 L 126.25625,18.06875 L 125.81875,18.2875 L 126.0375,17.19375 L 124.75625,17.00625 L 124.975,18.475 L 124.5375,18.475 L 125.81875,19.13125 L 125.19375,19.13125 L 125.19375,19.5375 L 124.13125,18.475 L 123.475,18.69375 L 123.69375,19.13125 L 123.25625,18.69375 L 123.25625,20.19375 L 121.7875,20.6 L 121.7875,22.1 L 123.0375,23.6 L 122.63125,23.38125 L 120.9125,24.6625 L 120.2875,24.44375 L 120.2875,24.0375 L 119.63125,24.44375 L 119.44375,26.35 L 119.85,26.1625 L 119.00625,26.7875 L 119.225,27.85 L 118.56875,28.2875 L 118.1625,27.85 L 118.56875,28.9125 L 118.1625,28.50625 L 117.725,29.35 L 117.50625,28.69375 L 116.6625,30.19375 L 116.6625,30.85 L 117.2875,31.475 L 117.725,31.0375 L 117.725,31.69375 L 118.56875,31.475 L 118.7875,31.9125 L 119.63125,31.475 L 119.44375,31.9125 L 118.38125,32.5375 L 119.00625,32.5375 L 119.00625,32.975 L 118.7875,32.975 L 118.94375,33.25625 L 119.1,33.31875 L 119.63125,32.975 L 119.44375,33.6 L 120.9125,32.75625 L 120.9125,33.38125 L 120.06875,33.38125 L 120.50625,33.81875 L 119.85,33.6 L 119.44375,33.6 L 118.56875,33.6 L 119.00625,34.44375 L 118.56875,34.0375 L 118.7875,35.5375 L 118.1625,35.725 L 117.50625,34.25625 L 116.88125,34.0375 L 117.1,35.1 L 116.225,33.81875 L 116.44375,34.25625 L 116.0375,34.25625 L 115.81875,34.25625 L 116.225,34.88125 L 115.81875,35.31875 L 116.44375,35.5375 L 115.81875,35.5375 L 115.6,36.38125 L 115.6,35.725 L 115.1625,36.6 L 115.6,35.5375 L 115.38125,35.31875 L 114.94375,34.88125 L 114.94375,34.0375 L 114.5375,34.6625 L 114.5375,33.81875 L 113.85,33.81875 z M 163.943,29.137 L 165.433,29.989 L 167.35,29.989 L 167.137,28.924 L 166.923,29.35 L 165.86,29.137 L 165.86,28.286 L 166.498,28.072 L 166.285,27.434 L 167.35,26.582 L 166.71,26.155 L 166.71,26.794 L 165.86,26.794 L 165.646,25.942 L 165.86,25.517 L 164.793,25.729 L 165.22,26.369 L 163.73,26.794 L 163.73,27.859 L 163.943,28.711 L 163.303,29.563 L 163.943,29.137 z\",\n\t\t\"abbreviation\": \"NT\",\n\t\t\"label\": {\n\t\t\t\"name\": \"Northern\\nTerritory\",\n\t\t\t\"x\": 144,\n\t\t\t\"y\": 70\n\t\t}\n\t},\n\t\"QLD\": {\n\t\t\"dimensions\": \"M 204.81875,5.2875 L 203.975,5.50625 L 203.31875,6.7875 L 202.06875,7.19375 L 202.25625,8.25625 L 201.63125,11.0375 L 201.4125,11.0375 L 201.19375,12.5375 L 201.85,12.5375 L 201.00625,12.725 L 200.7875,14.00625 L 201.19375,14.6625 L 201.63125,14.225 L 201.19375,14.88125 L 200.7875,14.6625 L 200.56875,15.50625 L 200.35,14.00625 L 199.2875,15.725 L 199.9125,15.94375 L 199.2875,15.94375 L 198.44375,18.06875 L 199.06875,18.06875 L 198.85,17.225 L 199.50625,17.4125 L 199.06875,17.63125 L 199.9125,18.2875 L 201.00625,18.2875 L 199.9125,18.69375 L 201.00625,19.13125 L 200.56875,19.35 L 200.7875,20.4125 L 199.9125,18.9125 L 199.50625,19.975 L 198.44375,20.81875 L 199.06875,22.75625 L 198.85,23.38125 L 199.2875,23.1625 L 199.06875,23.38125 L 199.50625,23.6 L 198.6625,23.6 L 197.56875,26.7875 L 198.6625,29.13125 L 198.00625,31.25625 L 198.85,35.1 L 197.56875,38.50625 L 196.94375,41.06875 L 197.38125,42.13125 L 195.88125,46.38125 L 194.1625,48.50625 L 193.75625,51.2875 L 191.81875,52.7875 L 188.225,53.63125 L 187.7875,53.4125 L 186.50625,52.56875 L 185.00625,52.35 L 184.1625,51.2875 L 182.6625,50.63125 L 182.25625,48.725 L 181.4125,47.88125 L 178.63125,47.0375 L 175.225,46.6 L 173.4125,44.19375 L 173.4125,117.35 L 194.1625,117.35 L 194.1625,134.2875 L 247.2875,134.35 L 248.1625,133.88125 L 248.1,133.35 L 248.81875,133.2875 L 248.9125,132.1625 L 250.00625,132.25625 L 250.7875,131.06875 L 251.35,131.0375 L 252.6625,131.44375 L 253.94375,131.6625 L 255.38125,131.1625 L 256.2875,131.06875 L 256.50625,131.6 L 257.225,131.5375 L 257.975,131.81875 L 258.56875,132.13125 L 260.19375,132.1625 L 261.31875,132.4125 L 261.975,133.25625 L 262.38125,133.75625 L 262.81875,134.44375 L 262.88125,135.1625 L 263.35,136.225 L 264.0375,135.7875 L 264.35,135.225 L 265.00625,134.4125 L 265.6625,133.63125 L 266.06875,134.31875 L 266.85,134.6 L 267.88125,134.13125 L 268.00625,133.56875 L 268.6625,132.7875 L 267.94375,132.85 L 267.6625,131.7875 L 267.75625,131.0375 L 268.6625,130.94375 L 269.75625,130.85 L 270.4125,130.225 L 271.2875,129.6 L 272.225,129.88125 L 273.0375,130.69375 L 274.06875,130.225 L 275.00625,130.50625 L 275.56875,130.44375 L 276.06875,130.225 L 276.6,129.81875 L 277.50625,129.9125 L 278.475,129.88125 L 278.50625,129.44375 L 277.6625,128.6 L 277.06875,126.0375 L 276.6,124.13125 L 275.975,123.25625 L 275.31875,123.69375 L 275.75625,123.0375 L 274.88125,122.63125 L 275.5375,121.975 L 274.88125,121.35 L 275.75625,120.9125 L 275.1,120.2875 L 275.1,119.63125 L 276.1625,120.9125 L 275.5375,119.00625 L 275.31875,119.63125 L 275.75625,117.94375 L 275.31875,117.6625 L 275.5375,115.81875 L 275.1,115.81875 L 275.975,112.4125 L 275.5375,112.4125 L 275.1,111.5375 L 274.69375,112.81875 L 274.88125,111.75625 L 274.25625,111.75625 L 274.69375,111.35 L 273.81875,110.69375 L 273.81875,109.4125 L 274.475,108.7875 L 273.19375,109.19375 L 274.25625,108.7875 L 274.0375,107.725 L 271.69375,107.06875 L 272.35,106.6625 L 271.06875,105.1625 L 271.2875,104.31875 L 270.63125,103.88125 L 270.4125,104.31875 L 270.63125,103.6625 L 269.35,103.0375 L 269.35,103.25625 L 268.2875,102.19375 L 267.225,99.4125 L 266.38125,99.19375 L 266.6,98.35 L 266.1625,98.975 L 266.1625,98.35 L 265.5375,98.13125 L 265.94375,98.975 L 265.1,98.56875 L 265.1,98.975 L 264.25625,98.56875 L 264.25625,98.975 L 261.475,95.1625 L 260.85,96.00625 L 259.975,94.725 L 260.4125,94.50625 L 259.7875,93.225 L 260.19375,92.81875 L 259.56875,90.475 L 259.975,90.475 L 260.19375,88.75625 L 259.7875,87.69375 L 259.7875,88.35 L 259.35,88.13125 L 258.9125,87.2875 L 259.56875,87.50625 L 259.7875,87.2875 L 259.13125,86.225 L 259.13125,87.06875 L 258.9125,86.225 L 258.50625,86.00625 L 258.2875,86.63125 L 258.9125,87.69375 L 258.50625,87.50625 L 258.9125,88.56875 L 255.94375,86.4125 L 254.88125,84.725 L 254.6625,85.1625 L 254.0375,86.225 L 254.6625,87.69375 L 255.1,88.56875 L 254.6625,88.13125 L 253.38125,86.63125 L 252.1,88.13125 L 252.75625,86.63125 L 251.88125,86.63125 L 252.31875,86.4125 L 252.1,86.00625 L 251.25625,86.225 L 252.1,85.7875 L 250.81875,82.81875 L 251.25625,80.475 L 251.0375,80.88125 L 250.19375,80.0375 L 249.975,80.475 L 249.975,78.5375 L 249.13125,78.975 L 249.35,78.31875 L 249.13125,78.31875 L 249.5375,77.25625 L 248.69375,76.4125 L 248.06875,76.85 L 248.25625,76.00625 L 246.7875,76.00625 L 246.56875,75.35 L 247.00625,75.13125 L 245.94375,74.50625 L 246.13125,74.06875 L 245.50625,73.44375 L 246.13125,73.225 L 245.725,72.7875 L 246.35,73.00625 L 246.56875,72.56875 L 247.63125,73.44375 L 246.35,71.31875 L 245.94375,71.50625 L 245.94375,70.88125 L 245.2875,70.88125 L 245.06875,70.0375 L 244.44375,70.0375 L 244.225,70.0375 L 244.225,70.88125 L 243.6,70.6625 L 242.725,69.81875 L 242.94375,69.6 L 242.94375,69.38125 L 241.88125,68.75625 L 240.6,68.975 L 240.19375,67.475 L 239.5375,67.475 L 239.975,68.5375 L 239.1,68.31875 L 237.85,67.0375 L 238.69375,67.475 L 237.4125,64.69375 L 237.4125,65.56875 L 235.50625,65.75625 L 234.63125,63.85 L 234.44375,64.69375 L 233.7875,64.69375 L 233.1625,63.85 L 231.00625,63.00625 L 229.75625,61.50625 L 230.1625,59.1625 L 229.31875,59.1625 L 227.81875,56.6 L 228.88125,52.975 L 228.475,52.975 L 228.475,51.2875 L 227.19375,48.94375 L 227.6,47.88125 L 226.5375,48.1 L 224.00625,44.69375 L 224.00625,43.63125 L 224.4125,43.63125 L 224.4125,42.13125 L 223.56875,41.06875 L 223.35,38.725 L 222.50625,37.88125 L 223.56875,36.6 L 223.56875,36.38125 L 222.9125,36.6 L 222.725,35.5375 L 223.56875,34.475 L 223.13125,34.475 L 222.725,33.6 L 221.44375,33.4125 L 220.56875,32.13125 L 219.1,31.69375 L 218.0375,28.9125 L 216.75625,29.975 L 215.9125,29.56875 L 215.475,30.85 L 214.19375,31.475 L 213.13125,30.63125 L 212.50625,27.85 L 211.4125,26.1625 L 211.85,24.0375 L 211.225,21.9125 L 211.4125,19.975 L 210.1625,20.4125 L 210.7875,18.475 L 209.50625,17.63125 L 209.50625,16.7875 L 208.44375,16.56875 L 208.225,15.06875 L 209.50625,14.00625 L 208.44375,13.6 L 207.6,13.81875 L 206.94375,13.1625 L 206.94375,9.975 L 206.1,7.4125 L 205.475,7.4125 L 205.0375,6.56875 L 205.0375,6.975 L 204.19375,7.4125 L 205.25625,5.69375 L 205.0375,5.50625 L 204.81875,5.2875 z M 275.536,104.1 L 276.386,105.378 L 274.682,107.295 L 275.109,107.295 L 274.682,108.785 L 274.258,109.85 L 275.109,111.341 L 277.026,105.59 L 276.599,104.738 L 276.599,103.248 L 275.536,104.1 z M 183.536,45.961 L 184.173,46.174 L 184.813,44.896 L 185.026,45.535 L 185.876,45.322 L 184.813,44.258 L 183.109,44.896 L 182.045,45.961 L 183.109,46.6 L 183.536,45.961 z\",\n\t\t\"abbreviation\": \"QLD\",\n\t\t\"label\": {\n\t\t\t\"name\": \"Queensland\",\n\t\t\t\"x\": 215,\n\t\t\t\"y\": 100\n\t\t}\n\t},\n\t\"WA\": {\n\t\t\"dimensions\": \"M 113.85,156.31875 L 113.85,117.35 L 113.85,117.35 L 113.85,33.81875 L 112.6,33.81875 L 112.19375,33.38125 L 111.35,33.19375 L 110.06875,33.38125 L 110.9125,34.0375 L 111.13125,34.88125 L 110.2875,33.81875 L 110.9125,34.88125 L 110.69375,34.6625 L 110.475,35.1 L 110.06875,34.6625 L 109.85,35.5375 L 109.4125,34.44375 L 109.00625,35.1 L 110.06875,38.06875 L 109.63125,38.06875 L 109.4125,37.00625 L 108.35,35.94375 L 108.35,37.6625 L 107.725,38.2875 L 108.13125,37.44375 L 107.725,36.7875 L 108.13125,36.6 L 107.9125,35.31875 L 108.56875,33.81875 L 108.13125,33.81875 L 109.00625,33.6 L 108.56875,32.975 L 109.00625,32.75625 L 107.50625,31.69375 L 107.2875,32.13125 L 105.38125,29.13125 L 103.88125,28.2875 L 103.6625,27.44375 L 103.0375,27.225 L 103.25625,27.85 L 102.6,27.225 L 102.1625,27.63125 L 102.1625,27.225 L 101.75625,27.63125 L 101.31875,26.56875 L 100.0375,26.1625 L 100.0375,26.56875 L 99.19375,26.38125 L 99.63125,27.44375 L 100.475,27.85 L 100.1,27.81875 L 98.975,27.63125 L 99.19375,28.2875 L 98.75625,28.725 L 98.56875,28.2875 L 98.35,29.56875 L 97.69375,28.2875 L 97.2875,28.50625 L 97.69375,27.44375 L 96.4125,28.2875 L 96.225,28.725 L 96.63125,29.13125 L 95.7875,29.56875 L 95.56875,28.50625 L 95.1625,28.50625 L 95.56875,28.06875 L 95.1625,28.06875 L 95.56875,27.63125 L 94.94375,28.06875 L 94.2875,27.85 L 94.2875,28.2875 L 94.1,27.85 L 94.1,28.2875 L 95.35,28.9125 L 94.50625,29.56875 L 94.725,30.19375 L 94.1,30.63125 L 94.50625,31.475 L 93.6625,31.475 L 93.6625,32.5375 L 93.00625,31.9125 L 93.225,31.06875 L 92.38125,31.25625 L 92.38125,30.63125 L 91.75625,32.31875 L 91.94375,30.4125 L 92.38125,29.7875 L 91.5375,29.35 L 91.5375,31.69375 L 90.88125,31.475 L 90.475,32.31875 L 90.25625,31.69375 L 89.81875,32.13125 L 90.0375,31.25625 L 89.19375,32.13125 L 89.6,32.31875 L 88.31875,32.975 L 88.975,33.81875 L 89.6,33.81875 L 88.75625,34.475 L 90.0375,34.88125 L 90.25625,34.475 L 90.6625,34.6625 L 89.81875,35.5375 L 90.88125,35.94375 L 89.81875,35.94375 L 89.4125,35.31875 L 88.5375,35.94375 L 87.9125,34.475 L 87.475,34.6625 L 87.69375,35.5375 L 86.4125,35.725 L 86.85,35.94375 L 86.63125,36.6 L 87.9125,35.725 L 86.63125,36.81875 L 87.06875,37.225 L 88.13125,36.6 L 88.13125,37.00625 L 88.5375,37.00625 L 87.9125,37.6625 L 89.19375,38.725 L 88.13125,37.88125 L 87.69375,38.2875 L 87.25625,37.44375 L 86.4125,37.225 L 86.4125,36.7875 L 85.7875,37.225 L 85.35,38.06875 L 85.13125,37.6625 L 84.9125,38.2875 L 84.06875,38.06875 L 84.2875,38.2875 L 83.44375,38.94375 L 83.85,39.13125 L 83.225,39.35 L 84.06875,41.69375 L 84.2875,41.31875 L 84.2875,41.475 L 84.725,40.85 L 84.35,41.19375 L 84.9125,40.19375 L 85.56875,39.7875 L 85.13125,40.19375 L 85.7875,40.19375 L 84.9125,40.85 L 84.725,42.35 L 85.13125,42.35 L 84.2875,42.75625 L 84.725,42.975 L 84.2875,43.19375 L 83.85,42.13125 L 83.44375,44.0375 L 84.9125,43.81875 L 85.75625,44.25625 L 83.85,44.475 L 83.44375,44.0375 L 83.00625,44.475 L 83.38125,44.69375 L 82.38125,44.88125 L 83.00625,44.69375 L 82.38125,44.475 L 81.725,43.63125 L 80.25625,42.975 L 80.88125,43.63125 L 80.44375,43.63125 L 80.88125,44.25625 L 80.0375,43.63125 L 80.0375,43.81875 L 78.975,43.4125 L 79.38125,43.4125 L 79.1625,42.975 L 79.6,42.975 L 78.75625,42.5375 L 78.75625,42.975 L 78.1,42.75625 L 78.31875,43.19375 L 77.9125,42.75625 L 78.31875,43.4125 L 77.9125,43.63125 L 78.75625,43.81875 L 78.975,44.25625 L 78.31875,44.0375 L 78.975,44.475 L 78.5375,44.475 L 78.31875,44.475 L 77.475,44.475 L 78.5375,45.1 L 77.06875,45.1 L 77.475,45.75625 L 77.69375,45.31875 L 78.31875,45.5375 L 77.475,46.1625 L 78.975,46.6 L 79.38125,47.88125 L 80.25625,47.44375 L 80.25625,47.0375 L 80.6625,47.225 L 79.6,48.2875 L 80.0375,48.725 L 79.38125,48.50625 L 80.475,50.44375 L 78.5375,48.50625 L 77.9125,48.725 L 78.75625,50.225 L 78.31875,50.00625 L 77.9125,51.06875 L 77.9125,52.13125 L 76.63125,50.85 L 75.975,48.725 L 75.13125,48.1 L 75.13125,46.38125 L 74.50625,46.38125 L 73.85,45.75625 L 74.06875,44.88125 L 74.725,44.69375 L 74.2875,44.0375 L 73.63125,44.25625 L 72.38125,46.38125 L 73.00625,47.0375 L 71.2875,46.81875 L 71.1,47.44375 L 71.50625,48.2875 L 70.6625,47.88125 L 70.6625,48.2875 L 69.81875,48.50625 L 69.1625,49.38125 L 69.6,49.56875 L 68.5375,50.44375 L 68.31875,52.35 L 68.94375,53.85 L 68.5375,55.31875 L 70.0375,55.5375 L 70.0375,56.38125 L 67.0375,58.5375 L 66.19375,58.725 L 65.5375,59.6 L 65.975,60.225 L 64.9125,60.44375 L 65.13125,61.2875 L 64.06875,63.225 L 61.50625,66.4125 L 55.5375,68.975 L 54.0375,69.1625 L 52.56875,69.1625 L 51.9125,69.6 L 51.06875,70.225 L 50.44375,69.6 L 48.50625,69.1625 L 48.725,69.6 L 48.725,69.81875 L 48.50625,69.6 L 48.1,69.38125 L 47.88125,69.6 L 46.38125,71.50625 L 41.9125,72.38125 L 41.9125,71.94375 L 40.225,73.00625 L 40.4125,73.44375 L 39.7875,73.44375 L 39.35,74.2875 L 38.2875,74.50625 L 38.2875,74.2875 L 36.6,75.13125 L 35.31875,74.50625 L 35.1,73.85 L 33.6,74.725 L 32.975,74.50625 L 32.5375,74.2875 L 33.19375,73.225 L 32.75625,73.225 L 31.69375,74.50625 L 31.9125,74.725 L 31.475,74.725 L 29.35,75.7875 L 28.69375,75.35 L 28.50625,76.4125 L 26.7875,77.25625 L 26.1625,78.5375 L 25.1,78.75625 L 24.0375,80.475 L 19.975,81.5375 L 18.2875,82.6 L 18.06875,83.88125 L 17.63125,84.06875 L 17.19375,83.88125 L 17.4125,84.725 L 16.7875,85.7875 L 17.19375,86.225 L 16.7875,86.00625 L 17.00625,86.4125 L 16.13125,87.475 L 15.725,86.85 L 14.6625,87.475 L 15.06875,86.00625 L 14.6625,86.4125 L 14.44375,84.94375 L 15.2875,82.38125 L 13.7875,82.81875 L 11.6625,87.9125 L 12.725,90.69375 L 12.31875,91.975 L 12.5375,94.50625 L 10.38125,97.50625 L 9.975,101.31875 L 11.6625,104.1 L 11.44375,104.5375 L 11.88125,106.225 L 12.725,106.88125 L 15.06875,111.56875 L 15.725,111.75625 L 15.94375,112.81875 L 15.2875,112.81875 L 15.50625,115.1625 L 14.44375,116.44375 L 13.38125,114.75625 L 13.1625,112.4125 L 13.1625,113.475 L 12.1,114.31875 L 12.31875,111.975 L 10.6,109.225 L 9.975,110.9125 L 10.38125,111.35 L 10.38125,110.475 L 11.0375,113.69375 L 13.1625,115.38125 L 12.94375,117.31875 L 11.6625,117.94375 L 11.44375,116.44375 L 11.25625,117.725 L 10.81875,115.1625 L 10.6,116.44375 L 9.75625,113.0375 L 9.975,115.81875 L 9.31875,115.38125 L 9.31875,113.0375 L 9.13125,114.75625 L 8.25625,114.1 L 13.7875,122.19375 L 15.06875,125.6 L 14.6625,126.6625 L 15.06875,128.81875 L 17.4125,131.56875 L 18.06875,132.85 L 17.85,133.69375 L 19.75625,136.25625 L 20.63125,139.25625 L 20.4125,143.06875 L 20.4125,143.50625 L 21.0375,146.9125 L 25.2875,155.85 L 25.50625,159.0375 L 26.56875,158.4125 L 26.56875,158.81875 L 25.50625,159.0375 L 25.725,160.1 L 25.2875,160.75625 L 25.50625,162.25625 L 24.6625,163.94375 L 25.2875,168.85 L 22.975,171.6 L 21.88125,171.6 L 20.63125,170.75625 L 20.63125,175.225 L 21.475,177.56875 L 21.69375,177.1625 L 22.94375,176.94375 L 25.2875,178.225 L 27.225,181.19375 L 29.7875,182.0375 L 29.975,181.4125 L 30.85,182.0375 L 29.7875,182.0375 L 31.475,183.1 L 32.13125,182.475 L 33.38125,183.1 L 36.38125,182.69375 L 38.06875,183.75625 L 38.50625,182.88125 L 40.4125,183.5375 L 40.85,183.31875 L 39.7875,182.88125 L 40.225,182.0375 L 40.63125,181.81875 L 40.4125,182.69375 L 42.13125,182.69375 L 41.9125,182.0375 L 43.4125,181.81875 L 43.63125,180.5375 L 45.5375,179.69375 L 45.75625,178.85 L 46.81875,178.4125 L 46.38125,178.00625 L 49.1625,178.85 L 49.38125,178.00625 L 50.225,178.225 L 50.225,177.35 L 51.2875,177.56875 L 50.44375,176.725 L 53.4125,173.94375 L 54.0375,173.94375 L 56.81875,174.38125 L 57.88125,173.5375 L 63.225,172.88125 L 65.975,173.725 L 67.475,173.1 L 68.31875,174.6 L 69.38125,174.6 L 69.81875,173.725 L 71.2875,174.1625 L 71.50625,173.5375 L 74.2875,173.31875 L 74.9125,173.725 L 75.13125,174.6 L 76.63125,173.5375 L 77.69375,173.94375 L 80.6625,170.975 L 81.5375,167.56875 L 82.38125,166.69375 L 86.225,165.44375 L 93.88125,160.94375 L 95.56875,160.5375 L 98.7875,160.94375 L 102.38125,160.75625 L 109.225,158.63125 L 113.85,156.31875 z M 87.25625,44.25625 L 86.19375,44.69375 L 85.81875,44.2875 L 86.19375,44.475 L 87.25625,44.25625 z M 8.693,113.044 L 6.989,109.211 L 6.989,111.341 L 8.693,114.109 L 8.693,113.044 z\",\n\t\t\"abbreviation\": \"WA\",\n\t\t\"label\": {\n\t\t\t\"name\": \"Western\\nAustralia\",\n\t\t\t\"x\": 65,\n\t\t\t\"y\": 110\n\t\t}\n\t},\n\t\"VIC\": {\n\t\t\"dimensions\": \"M 253.1625,203.75625 L 252.5375,203.13125 L 252.725,203.13125 L 252.00625,202.475 L 250.2875,202.35 L 242.1,198.2875 L 242.25625,196.94375 L 241.9125,195.85 L 241.19375,194.81875 L 240.63125,193.6 L 240.81875,192.44375 L 239.4125,191.69375 L 238.50625,192.0375 L 237.7875,192.31875 L 237.0375,192.44375 L 235.975,192.7875 L 234.50625,193.19375 L 232.56875,192.725 L 231.50625,192.13125 L 230.63125,192.44375 L 229.975,193.13125 L 228.7875,192.9125 L 227.56875,192.35 L 226.6625,192.475 L 225.225,191.75625 L 223.38125,192.0375 L 222.5375,191.6 L 221.81875,191.69375 L 221.31875,192.35 L 221.56875,193.81875 L 220.25625,194.00625 L 218.63125,193.31875 L 217.35,192.38125 L 216.975,191.1 L 215.00625,189.31875 L 213.38125,188.63125 L 212.25625,188.6 L 210.81875,186.5375 L 210.19375,183.7875 L 209.19375,183.38125 L 207.475,183.25625 L 206.50625,183.0375 L 205.44375,183.56875 L 205.4125,184.5375 L 204.31875,183.56875 L 203.81875,181.5375 L 202.1,180.1 L 199.975,179.85 L 198.225,179.56875 L 197.19375,180.2875 L 195.35,179.4125 L 194.225,179.6 L 194.1625,179.38125 L 194.1625,207.7875 L 194.6,207.81875 L 196.94375,209.725 L 196.94375,210.7875 L 197.6,210.56875 L 198.225,211.00625 L 199.50625,209.50625 L 202.06875,210.7875 L 203.75625,210.35 L 211.63125,214.63125 L 214.85,211.44375 L 217.38125,209.725 L 218.88125,209.725 L 219.31875,208.44375 L 217.81875,208.88125 L 216.975,208.225 L 218.0375,208.225 L 220.7875,206.1 L 222.06875,208.6625 L 220.7875,210.35 L 218.88125,209.94375 L 220.7875,211.63125 L 222.06875,210.7875 L 222.725,211.00625 L 222.9125,209.2875 L 224.4125,209.2875 L 224.85,210.56875 L 224.00625,210.7875 L 223.7875,212.06875 L 225.25625,213.13125 L 226.75625,212.9125 L 226.975,213.35 L 226.35,213.13125 L 227.4125,215.0375 L 228.25625,214.4125 L 229.1,214.85 L 228.88125,214.19375 L 229.75625,215.9125 L 230.81875,216.975 L 231.225,214.19375 L 229.94375,215.0375 L 229.5375,213.35 L 231.6625,213.35 L 234.19375,212.50625 L 238.25625,208.225 L 241.0375,206.5375 L 237.63125,208.00625 L 239.5375,206.75625 L 239.475,206.6625 L 238.9125,206.1 L 240.38125,206.5375 L 242.1,205.88125 L 241.88125,206.31875 L 251.25625,205.475 L 253.1625,203.75625 z \",\n\t\t\"abbreviation\": \"VIC\",\n\t\t\"label\": {\n\t\t\t\"name\": \"Victoria\",\n\t\t\t\"x\": 220,\n\t\t\t\"y\": 204\n\t\t}\n\t},\n\t\"SA\": {\n\t\t\"dimensions\": \"M 194.1625,207.7875 L 194.1625,179.38125 L 194.1625,179.35 L 194.1625,134.2875 L 194.1625,117.35 L 173.4125,117.35 L 173.4125,117.35 L 113.85,117.35 L 113.85,156.31875 L 114.31875,156.06875 L 120.9125,155.4125 L 121.975,155.19375 L 126.25625,155.63125 L 128.6,154.35 L 132.63125,156.475 L 135.63125,158.81875 L 137.5375,158.81875 L 137.31875,158.4125 L 137.75625,158.19375 L 139.225,158.19375 L 141.7875,160.31875 L 144.35,160.31875 L 143.69375,159.69375 L 144.13125,159.475 L 144.56875,159.88125 L 144.975,159.25625 L 147.31875,161.6 L 146.69375,161.81875 L 146.69375,162.88125 L 147.975,162.225 L 148.81875,162.44375 L 149.6625,164.1625 L 149.0375,165.00625 L 149.25625,164.35 L 148.19375,164.35 L 148.6,165.225 L 148.19375,165.85 L 149.0375,166.06875 L 148.6,166.69375 L 149.88125,167.975 L 149.475,166.69375 L 150.1,167.975 L 150.725,167.56875 L 152.00625,168.4125 L 151.38125,167.7875 L 152.44375,167.975 L 152.00625,168.4125 L 153.2875,170.13125 L 153.2875,171.38125 L 155.63125,173.5375 L 156.9125,179.2875 L 157.13125,178.63125 L 157.35,179.2875 L 157.75625,179.475 L 156.9125,179.69375 L 156.475,178.85 L 156.69375,178.63125 L 155.85,178.4125 L 155.85,178.00625 L 155.19375,179.2875 L 156.06875,178.85 L 158.63125,182.0375 L 159.69375,181.4125 L 160.75625,182.69375 L 161.1625,180.35 L 159.69375,180.975 L 160.31875,180.5375 L 160.5375,178.85 L 161.38125,178.4125 L 161.81875,178.85 L 161.81875,177.35 L 165.00625,173.725 L 167.56875,172.44375 L 166.9125,172.6625 L 167.35,171.81875 L 167.7875,172.25625 L 169.25625,171.81875 L 170.75625,167.56875 L 172.0375,166.06875 L 172.88125,166.50625 L 172.88125,162.225 L 173.94375,164.56875 L 174.1625,166.50625 L 174.7875,167.13125 L 173.1,168.63125 L 174.38125,170.975 L 171.81875,173.5375 L 171.19375,175.44375 L 170.75625,175.6625 L 171.19375,176.94375 L 170.5375,178.19375 L 170.975,178.00625 L 171.19375,179.25625 L 170.75625,181.81875 L 170.31875,182.25625 L 167.7875,181.6 L 166.69375,184.81875 L 168.85,184.6 L 170.5375,183.31875 L 172.0375,183.94375 L 172.88125,183.5375 L 172.44375,183.1 L 173.50625,180.75625 L 173.725,178.63125 L 175.00625,175.6625 L 178.00625,180.81875 L 178.19375,181.19375 L 177.7875,181.4125 L 177.56875,180.75625 L 177.35,185.44375 L 175.00625,187.56875 L 178.00625,187.7875 L 179.25625,186.725 L 180.35,186.94375 L 183.5375,189.475 L 180.35,187.1625 L 183.1,189.2875 L 184.9125,191.63125 L 183.5375,189.50625 L 184.6,190.35 L 185.88125,193.13125 L 185.31875,192.25625 L 186.94375,196.5375 L 186.725,197.6 L 185.6625,198.6625 L 186.50625,199.94375 L 186.1,200.56875 L 187.7875,202.9125 L 190.25625,206.225 L 190.35,206.5375 L 191.63125,207.6 L 194.1625,207.7875 z M 172.887,189.499 L 173.1,188.433 L 171.608,188.433 L 172.035,187.156 L 165.007,188.646 L 164.581,189.711 L 165.86,191.202 L 167.777,190.989 L 169.267,190.563 L 170.97,191.415 L 171.822,190.776 L 172.035,189.923 L 174.804,189.923 L 175.229,189.072 L 173.738,188.433 L 172.887,189.499 z \",\n\t\t\"abbreviation\": \"SA\",\n\t\t\"label\": {\n\t\t\t\"name\": \"South\\nAustralia\",\n\t\t\t\"x\": 155,\n\t\t\t\"y\": 135\n\t\t}\n\t},\n\t\"TAS\": {\n\t\t\"dimensions\": \"M 214.201,220.804 L 213.563,222.082 L 213.776,224.637 L 213.776,225.489 L 214.201,225.915 L 215.48,224.637 L 215.267,221.656 L 214.201,220.804 z M 240.397,223.785 L 240.397,224.637 L 241.248,225.489 L 241.887,226.98 L 243.59,226.34 L 243.165,225.276 L 242.738,225.702 L 243.165,224.637 L 243.377,224.211 L 242.525,224.211 L 240.821,222.082 L 239.544,223.573 L 240.397,223.785 z M 239.118,250.619 L 238.693,251.897 L 239.544,252.109 L 239.118,252.536 L 239.757,253.387 L 240.397,253.174 L 240.397,252.322 L 241.248,253.387 L 240.821,251.47 L 239.757,251.683 L 239.118,250.619 z M 243.377,238.692 L 242.952,237.415 L 243.59,235.711 L 242.952,235.073 L 243.59,233.368 L 241.887,231.239 L 240.821,231.026 L 240.397,232.304 L 239.118,231.665 L 237.627,233.368 L 236.563,232.729 L 235.498,233.582 L 234.646,233.156 L 233.156,233.794 L 234.22,234.86 L 234.006,235.285 L 232.729,233.794 L 231.666,234.646 L 231.876,235.499 L 231.452,234.433 L 229.536,234.86 L 224.637,231.877 L 223.359,231.877 L 222.932,230.813 L 222.932,231.665 L 222.082,231.452 L 222.082,231.877 L 219.1,230.387 L 219.314,232.09 L 218.674,233.368 L 219.525,236.989 L 221.017,239.119 L 220.59,239.544 L 222.721,242.313 L 222.721,244.229 L 223.359,243.59 L 224.424,245.507 L 224.849,245.507 L 224.424,246.998 L 224.211,245.721 L 222.294,244.016 L 222.932,247.85 L 223.572,248.063 L 224.637,251.257 L 225.702,251.683 L 226.766,254.026 L 227.406,254.026 L 226.979,253.813 L 227.406,252.96 L 227.832,254.239 L 229.536,254.239 L 229.322,254.665 L 227.832,254.239 L 227.832,254.877 L 227.406,254.665 L 228.044,256.369 L 229.536,255.729 L 231.876,256.156 L 231.666,255.517 L 232.516,257.007 L 233.793,257.007 L 234.646,255.729 L 234.006,255.09 L 234.86,255.304 L 235.073,254.452 L 234.433,254.239 L 235.286,253.813 L 234.433,252.749 L 234.646,252.322 L 234.646,252.96 L 235.073,253.387 L 235.286,252.749 L 235.286,253.387 L 236.136,253.813 L 236.35,251.47 L 236.99,251.683 L 236.99,250.406 L 235.923,248.702 L 237.414,250.619 L 237.84,250.406 L 237.414,251.683 L 238.267,251.044 L 238.053,249.98 L 238.693,249.767 L 237.627,249.128 L 238.693,249.34 L 239.118,250.406 L 239.97,250.193 L 241.035,248.276 L 240.397,247.211 L 241.248,246.785 L 241.46,245.082 L 240.821,245.294 L 241.887,243.165 L 242.525,243.165 L 241.887,242.952 L 242.738,241.674 L 242.313,242.952 L 243.377,243.377 L 243.377,244.656 L 243.804,244.016 L 243.165,242.526 L 243.377,238.692 z M 241.248,228.257 L 243.377,228.257 L 243.59,228.897 L 244.442,228.257 L 243.59,227.192 L 241.248,228.257 z\",\n\t\t\"abbreviation\": \"TAS\",\n\t\t\"label\": {\n\t\t\t\"textAnchor\": \"right\",\n\t\t\t\"name\": \"Tasmania\",\n\t\t\t\"x\": 155,\n\t\t\t\"y\": 245,\n\t\t\t\"fill\": \"black\"\n\t\t}\n\t},\n\t\"ACT\": {\n\t\t\"dimensions\": \"M 245.95389,185.84376 C 246.41125,185.82547 246.88157,185.90065 247.31277,186.09855 C 247.68261,186.26829 247.80326,186.51013 247.77989,186.77799 C 247.75652,187.04585 247.56857,187.345 247.35524,187.66976 C 246.92856,188.31926 246.34574,189.03605 246.37854,189.66562 C 246.30185,190.01096 245.94449,190.75975 245.44431,190.85464 C 245.19422,190.90208 244.88988,190.78812 244.59501,190.38752 C 244.30013,189.98692 244.00218,189.28493 243.70324,188.17934 C 243.52074,187.5044 243.73358,186.9315 244.17036,186.5232 C 244.60713,186.1149 245.26786,185.87121 245.95389,185.84376 z\",\n\t\t\"abbreviation\": \"ACT\",\n\t\t\"label\": {\n\t\t\t\"name\": \"Australian\\nCapital\\nTerritory\",\n\t\t\t\"x\": 260,\n\t\t\t\"y\": 190,\n\t\t\t\"fill\": \"black\",\n\t\t\t\"textAnchor\": \"left\"\n\t\t}\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/data/australia-states-dimensions.json\n ** module id = 8\n ** module chunks = 0\n **/","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst State = props =>\n  <path\n    className={`${props.state} state`}\n    d={props.dimensions}\n    data-name={props.state}\n    fill={props.fill}\n    onClick={props.onClickState}\n    stroke={props.stroke}\n    strokeWidth={props.strokeWidth} />;\n\nState.propTypes = {\n  dimensions: PropTypes.string,\n  fill: PropTypes.string,\n  onClickState: PropTypes.func,\n  state: PropTypes.string,\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default State;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/State.js\n **/"],"sourceRoot":""}